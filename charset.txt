` // start and end a string
// newline
 // space
(
)
⏜ // top parenthesis
⏝ // bottom parenthesis
[
]
⎴ // top square bracket
⎵ // bottom square bracket
⎶ // top and bottom square brackets
{
}
⏞ // top curly bracket
⏟ // bottom curly bracket
⏻ // power symbol
⏵
⏴
⏶
⏷
⭪ // left dotted arrow
⭫ // up dotted arrow
⭬ // right dotted arrow
⭭ // down dotted arrow
⭮ // rotate counterclockwise
⭯ // rotate clockwise
⬅ // solid left arrow
⇦ // white left arrow
⬆ // solid up arrow
⇧ // white up arrow
⬇ // solid down arrow
⇩ // white down arrow
⮕ // solid right arrow
⇨ // white right arrow
⬌ // horizontal dual arrow
⬄ // white horizontal arrow
⬍ // vertical dual arrow
⇳ // white vertical arrow
⋮ // vertical dots
⋯ // horizontal dots
⋰ // up-right dots
⋱ // up-left dots
|
‒
/
\
# // not a number
⁇ // double question mark
⁈ // question-exclaim mark
⁉ // exclaim-question mark
‽ // interrobang
‼
?
!
×
⨰ // vectorized multiplication
÷
%
^
-
+
∔ // vectorized plus
√
⅟
∞
∧ // and
⩑ // vectorized and
∨ // or
⩒ // vectorized or
¬ // not
⊻ // xor
⊽ // nor
∥ // xnor
⊼ // nand
∩ // intersection
∪ // union
∈ // element of
∉ // not element of
∋ // contains as member
∌ // does not contain
<
⋖ // vectorized less-than
>
⋗ // vectorized greater-than
=
≐ // vectorized equals
≤
⩿ // vectorized less-or-equals
≥
⪀ // vectorized greater-or-equals
≠
≡ // identical to
≢ // not identical to
⊂ // subset of
⊃ // superset of
⊄ // not subset of
⊅ // not superset of
⊆ // subset or equal
⊇ // superset or equal
⊈ // not subset nor equal
⊉ // not superset nor equal
n // round, then absolute value
z // round
q // evaluate to rational
r // evaluate to real
N // is a natural number
Z // is an integer
Q // is rational
R // is real
C // is complex
I // is imaginary
i // imaginary unit
e // eulers constant
~ // conjugate
s // sine
c // cosine
t // tangent
S // arc-sine
C // arc-cosine
T // arc-tangent
b // convert left stack to an integer, assuming it's in the base of <right stack>
B // inverse of above
p // prime with the index of <mid>
P // is prime
a // radians to angle
A // angle to radians
f // the <nth> fibbonacci number
F // is a fibbonacci number
l // log <left> in base<right>
L // natural log of <mid>
g // gravitational constant
d // retain only duplicates
D // remove duplicates
o // order
O // is ordered
_ // floor
¯ // ceiling
« // left-shift
» // right-shift
⌛ // hourglass symbol (sleep)
⌚ // watch symbol (timestamp)
* // dot product
0
1
2
3
4
5
6
7
8
9
π // pi
& // join all mid stacks
@ // select the mid stack offset (from main stack) by the top of the mid stack
⇔ // swap the left and right stacks
U // upend the mid stack
Ù // upend the left stack
Ú // upend the right stack
Ü // upend the left and right stacks
Ū // upend the left, right, and mid stacks
Û // upend every stack
u // rotate the mid stack
ù // rotate left stack
ú // rotate right stack
ü // rotate left and right stacks
ū // rotate left, right, and mid stacks
û // rotate every stack
W // wipe the mid stack
Ẁ // wipe the left stack
Ẃ // wipe the right stack
Ẅ // wipe the left and right stacks
Ŵ // wipe every stack
w // remove the <nth> element from the mid stack
ẁ // remove the <nth> element from the left stack
ẃ // remove the <nth> element from the right stack
ẅ // remove the <nth> element from the left and right stacks
ŵ // remove the <nth> element from every stack
⤱ // mid -> right, mid -> left
⤲ // mid -> left, mid -> right
⤡ // swap top of left and mid
⤢ // swap top of right and mid
⭤ // swap top of right and left
⭥ // swap top and bottom of mid
⭢ // move top of left to right
⭡ // move bottom of mid to top
⭣ // move top of mid to bottom
⭠ // move top of right to left
⭦ // move top of mid to left
⭧ // move top of mid to right
⭨ // move top of left to mid
⭩ // move top of right to mid
⭰ // copy top of right to left
⭱ // copy top of mid
⭲ // copy top of left to right
⭶ // copy top of mid to left
⭷ // copy top of mid to right
⭸ // copy top of left to mid
⭹ // copy top of right to mid
⮐ // rotate stacks clockwise
⮑ // rotate stacks counterclockwise
⮒ // rotate tops of stacks clockwise
⮓ // rotate tops of stacks counterclockwise
∏ // product
∑ // sum
∀ // all
𝒫 // power set
𝒮 // ordered subsets
; // from <left>, in magnitudes of <right>
: // from <zero> to <mid> in steps of 1
'
"
, // from <left>, in steps of <right>
. // from <mid>, away from zero, in steps of 1
$ // clear the console