|| ?module? Data.Integer.Div


Data.Integer.Div.divdu !a_0::I !b_1::I !c_2::I = error "no AnyCodeExpr"
Data.Integer.Div.unsigned_int_to_integer !i_0::I = case (StdBool.not (<{StdInt.<_17}> i_0 0)) (True -> Data.Integer._Integer i_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 i_0)) 
Data.Integer.Div.ltU::B !a_0::I !b_1::I = error "no AnyCodeExpr"
Data.Integer.Div.neg_unsigned_int_to_integer_54 !i_0::I = case (Data.Integer.Div.ltU -2147483648 i_0) (True -> Data.Integer._Integer -1 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 i_0)) (False -> Data.Integer._Integer (<{StdInt.~_15}> i_0) (_SystemArray._createArray_8 0)) 
Data.Integer.Div.sign_and_unsigned_int_to_integer_52 !s_0::I !i_1::I = case (StdBool.not (<{StdInt.<_17}> s_0 0)) (True -> Data.Integer.Div.unsigned_int_to_integer i_1) (False -> Data.Integer.Div.neg_unsigned_int_to_integer_54 i_1) 
Data.Integer.Div.neg_sign_and_unsigned_int_to_integer_53 !s_0::I !i_1::I = case (StdBool.not (<{StdInt.<_17}> s_0 0)) (True -> Data.Integer.Div.neg_unsigned_int_to_integer_54 i_1) (False -> Data.Integer.Div.unsigned_int_to_integer i_1) 
Data.Integer.Div.div_integer_size_1_integer_50 !_vArray_0 !s1_1::I a1_2 !i2_3::I = case (StdBool.not (<{StdInt.<_17}> i2_3 0)) (True -> Data.Integer.Div.sign_and_unsigned_int_to_integer_52 s1_1 (select (Data.Integer.Div.divdu 0 (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) i2_3)::_Tuple2 1)) (False -> Data.Integer.Div.neg_sign_and_unsigned_int_to_integer_53 s1_1 (select (Data.Integer.Div.divdu 0 (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) (<{StdInt.~_15}> i2_3))::_Tuple2 1)) 
Data.Integer.Div.div_integer_size_2_integer_51 !_vArray_0 !s1_1::I a1_2 !i2_3::I = case (StdBool.not (<{StdInt.<_17}> i2_3 0)) (True -> let n1_2_0::I = select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 1 in case (Data.Integer.Div.ltU n1_2_0 i2_3) (True -> Data.Integer.Div.sign_and_unsigned_int_to_integer_52 s1_1 (select (Data.Integer.Div.divdu n1_2_0 (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) i2_3)::_Tuple2 1)) (False -> let _x_4_0::I = Data.Integer.Div.divdu 0 n1_2_0 i2_3, q1_4_1 = select _x_4_0::_Tuple2 1 in case (<{StdInt.==_16}> q1_4_1 0) (True -> Data.Integer.Div.sign_and_unsigned_int_to_integer_52 s1_1 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) i2_3)::_Tuple2 1)) (False -> Data.Integer._Integer s1_1 (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray._createArray_8 2) 1 q1_4_1) 0 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) i2_3)::_Tuple2 1))) ) ) (False -> let n1_2_0::I = select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 1, i2_2_1::I = <{StdInt.~_15}> i2_3 in case (Data.Integer.Div.ltU n1_2_0 i2_2_1) (True -> Data.Integer.Div.neg_sign_and_unsigned_int_to_integer_53 s1_1 (select (Data.Integer.Div.divdu n1_2_0 (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) i2_2_1)::_Tuple2 1)) (False -> let _x_4_0::I = Data.Integer.Div.divdu 0 n1_2_0 i2_2_1, q1_4_1 = select _x_4_0::_Tuple2 1 in case (<{StdInt.==_16}> q1_4_1 0) (True -> Data.Integer.Div.neg_sign_and_unsigned_int_to_integer_53 s1_1 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) i2_2_1)::_Tuple2 1)) (False -> Data.Integer._Integer (StdInt.bitnot s1_1) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray._createArray_8 2) 1 q1_4_1) 0 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (select _vArray_0::<{_SystemArray.Array;}> 3 a1_2 0) i2_2_1)::_Tuple2 1))) ) ) 
Data.Integer.Div.create_unintialized_int_array !size_0::I = error "no AnyCodeExpr"
Data.Integer.Div.div_uint_a_unsigned_int !i_0::I !r_1::I !d_2::I sa_3 !da_4 = case (StdBool.not (<{StdInt.<_17}> i_0 0)) (True -> let !sai_2_0::I = _SystemArray.select_11 sa_3 i_0, _x_2_1 = Data.Integer.Div.divdu r_1 sai_2_0 d_2 in Data.Integer.Div.div_uint_a_unsigned_int (<{StdInt.-_7}> i_0 1) (select _x_2_1::_Tuple2 0) d_2 sa_3 (_SystemArray.update_13 da_4 i_0 (select _x_2_1::_Tuple2 1))) (False -> <{_Tuple2!3}> r_1 da_4) 
Data.Integer.Div.div_rem_integer_unsigned_int !a1_0 !s2_1::I = let s_1_0::I = <{StdInt.-_7}> (_SystemArray.size_12 a1_0) 1, l_1_1::I = _SystemArray.select_11 a1_0 s_1_0 in case (Data.Integer.Div.ltU l_1_1 s2_1) (True -> Data.Integer.Div.div_uint_a_unsigned_int (<{StdInt.-_7}> s_1_0 1) l_1_1 s2_1 a1_0 (Data.Integer.Div.create_unintialized_int_array s_1_0)) (False -> let _x_3_0 = Data.Integer.Div.divdu 0 l_1_1 s2_1 in Data.Integer.Div.div_uint_a_unsigned_int (<{StdInt.-_7}> s_1_0 1) (select _x_3_0::_Tuple2 0) s2_1 a1_0 (_SystemArray.update_13 (Data.Integer.Div.create_unintialized_int_array (<{StdInt.+_6}> s_1_0 1)) s_1_0 (select _x_3_0::_Tuple2 1))) 
Data.Integer.Div.div_integer_unsigned_int_55 !a1_0 !s2_1::I = select (Data.Integer.Div.div_rem_integer_unsigned_int a1_0 s2_1)::_Tuple2 1
Data.Integer.Div.ushiftr::I !a_0::I !b_1::I = error "no AnyCodeExpr"
Data.Integer.Div.n_leading_zeros_64::I !n_0::I = case (Data.Integer.Div.ltU n_0 0) (True -> case (Data.Integer.Div.ltU n_0 65536) (True -> case (Data.Integer.Div.ltU n_0 256) (True -> case (Data.Integer.Div.ltU n_0 16) (True -> <{StdInt.+_6}> 60 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_0 n_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 4 in <{StdInt.+_6}> 56 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) ) (False -> case (Data.Integer.Div.ltU n_0 4096) (True -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 8 in <{StdInt.+_6}> 52 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 12 in <{StdInt.+_6}> 48 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) ) ) (False -> case (Data.Integer.Div.ltU n_0 16777216) (True -> case (Data.Integer.Div.ltU n_0 1048576) (True -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 16 in <{StdInt.+_6}> 44 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 20 in <{StdInt.+_6}> 40 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) ) (False -> case (Data.Integer.Div.ltU n_0 268435456) (True -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 24 in <{StdInt.+_6}> 36 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 28 in <{StdInt.+_6}> 32 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) ) ) ) (False -> case (Data.Integer.Div.ltU n_0 0) (True -> case (Data.Integer.Div.ltU n_0 0) (True -> case (Data.Integer.Div.ltU n_0 0) (True -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 32 in <{StdInt.+_6}> 28 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 36 in <{StdInt.+_6}> 24 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) ) (False -> case (Data.Integer.Div.ltU n_0 0) (True -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 40 in <{StdInt.+_6}> 20 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 44 in <{StdInt.+_6}> 16 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) ) ) (False -> case (Data.Integer.Div.ltU n_0 0) (True -> case (Data.Integer.Div.ltU n_0 0) (True -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 48 in <{StdInt.+_6}> 12 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 52 in <{StdInt.+_6}> 8 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) ) (False -> case (Data.Integer.Div.ltU n_0 0) (True -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 56 in <{StdInt.+_6}> 4 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3)) (False -> let n_5_0::I = Data.Integer.Div.ushiftr n_0 60 in StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_5_0 n_5_0)) 3) ) ) ) 
Data.Integer.Div.n_leading_zeros_32::I !n_0::I = case (Data.Integer.Div.ltU n_0 65536) (True -> case (Data.Integer.Div.ltU n_0 256) (True -> case (Data.Integer.Div.ltU n_0 16) (True -> <{StdInt.+_6}> 28 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_0 n_0)) 3)) (False -> let n_4_0::I = Data.Integer.Div.ushiftr n_0 4 in <{StdInt.+_6}> 24 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_4_0 n_4_0)) 3)) ) (False -> case (Data.Integer.Div.ltU n_0 4096) (True -> let n_4_0::I = Data.Integer.Div.ushiftr n_0 8 in <{StdInt.+_6}> 20 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_4_0 n_4_0)) 3)) (False -> let n_4_0::I = Data.Integer.Div.ushiftr n_0 12 in <{StdInt.+_6}> 16 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_4_0 n_4_0)) 3)) ) ) (False -> case (Data.Integer.Div.ltU n_0 16777216) (True -> case (Data.Integer.Div.ltU n_0 1048576) (True -> let n_4_0::I = Data.Integer.Div.ushiftr n_0 16 in <{StdInt.+_6}> 12 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_4_0 n_4_0)) 3)) (False -> let n_4_0::I = Data.Integer.Div.ushiftr n_0 20 in <{StdInt.+_6}> 8 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_4_0 n_4_0)) 3)) ) (False -> case (Data.Integer.Div.ltU n_0 268435456) (True -> let n_4_0::I = Data.Integer.Div.ushiftr n_0 24 in <{StdInt.+_6}> 4 (StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_4_0 n_4_0)) 3)) (False -> let n_4_0::I = Data.Integer.Div.ushiftr n_0 28 in StdInt.bitand (Data.Integer.Div.ushiftr 21935 (<{StdInt.+_6}> n_4_0 n_4_0)) 3) ) ) 
Data.Integer.Div.extra_int_65::B !a1_i_0::I !a2_i_1::I !a1_2 !a2_3 = case (<{StdInt.<_17}> a1_i_0 0) (True -> True) (False -> case (<{StdInt.==_16}> (_SystemArray.select_11 a1_2 a1_i_0) (_SystemArray.select_11 a2_3 a2_i_1)) (True -> Data.Integer.Div.extra_int_65 (<{StdInt.-_7}> a1_i_0 1) (<{StdInt.-_7}> a2_i_1 1) a1_2 a2_3) (False -> Data.Integer.Div.ltU (_SystemArray.select_11 a2_3 a2_i_1) (_SystemArray.select_11 a1_2 a1_i_0)) ) 
Data.Integer.Div.extra_int::B !a1_0 !a2_1 = Data.Integer.Div.extra_int_65 (<{StdInt.-_7}> (_SystemArray.size_12 a1_0) 1) (<{StdInt.-_7}> (_SystemArray.size_12 a2_1) 1) a1_0 a2_1
Data.Integer.Div.shift_left_2_62 !_vArray_0 !_vArray_1 a2_2 !_x_3::I a_4 = case _x_3 (0 -> let !s_2_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a_4, !i1_2_1::I = select _vArray_0::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_2_0 1), !i0_2_2::I = select _vArray_0::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_2_0 2) in _Tuple2 i1_2_1 i0_2_2) (_ -> let !s_1_0::I = select _vArray_1::<{_SystemArray.Array;}> 4 a2_2, !i1_1_1::I = select _vArray_1::<{_SystemArray.Array;}> 3 a2_2 (<{StdInt.-_7}> s_1_0 1), !i0_1_2::I = select _vArray_1::<{_SystemArray.Array;}> 3 a2_2 (<{StdInt.-_7}> s_1_0 2), !ix_1_3::I = <{Data.Integer.Div._if;374;11_92}> (<{StdInt.<_17}> 2 s_1_0) a2_2 s_1_0 _vArray_1, nr_1_4::I = <{StdInt.-_7}> 32 _x_3 in _Tuple2 (StdInt.bitor (<{StdInt.<<}> i1_1_1 _x_3) (Data.Integer.Div.ushiftr i0_1_2 nr_1_4)) (StdInt.bitor (<{StdInt.<<}> i0_1_2 _x_3) (Data.Integer.Div.ushiftr ix_1_3 nr_1_4)))
<{Data.Integer.Div._if;374;11_92}>::I !_x_0::B a2_1 s_2::I _vArray_3 = case _x_0 (True -> select _vArray_3::<{_SystemArray.Array;}> 3 a2_1 (<{StdInt.-_7}> s_2 3)) (_ -> 0)
Data.Integer.Div.shift_left_3x_63 !_vArray_0 !_vArray_1 a1_2 !_x_3::I a_4 = case _x_3 (0 -> let !s_2_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a_4, !i2_2_1::I = select _vArray_0::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_2_0 1), !i1_2_2::I = select _vArray_0::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_2_0 2) in _Tuple3 0 i2_2_1 i1_2_2) (_ -> let !s_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a_4 in case (StdBool.not (<{StdInt.<_17}> s_1_0 3)) (True -> let !i2_3_0::I = select _vArray_1::<{_SystemArray.Array;}> 3 a1_2 (<{StdInt.-_7}> s_1_0 1), !i1_3_1::I = select _vArray_1::<{_SystemArray.Array;}> 3 a1_2 (<{StdInt.-_7}> s_1_0 2), !i0_3_2::I = select _vArray_1::<{_SystemArray.Array;}> 3 a1_2 (<{StdInt.-_7}> s_1_0 3), nr_3_3::I = <{StdInt.-_7}> 32 _x_3 in _Tuple3 (Data.Integer.Div.ushiftr i2_3_0 nr_3_3) (StdInt.bitor (<{StdInt.<<}> i2_3_0 _x_3) (Data.Integer.Div.ushiftr i1_3_1 nr_3_3)) (StdInt.bitor (<{StdInt.<<}> i1_3_1 _x_3) (Data.Integer.Div.ushiftr i0_3_2 nr_3_3))) (False -> let !i2_3_0::I = select _vArray_1::<{_SystemArray.Array;}> 3 a1_2 1, !i1_3_1::I = select _vArray_1::<{_SystemArray.Array;}> 3 a1_2 0, nr_3_2::I = <{StdInt.-_7}> 32 _x_3 in _Tuple3 (Data.Integer.Div.ushiftr i2_3_0 nr_3_2) (StdInt.bitor (<{StdInt.<<}> i2_3_0 _x_3) (Data.Integer.Div.ushiftr i1_3_1 nr_3_2)) (<{StdInt.<<}> i1_3_1 _x_3)) )
Data.Integer.Div.mulud !a_0::I !b_1::I = error "no AnyCodeExpr"
Data.Integer.Div.subLU !_x_0::I !_x_1::I !_x_2::I = error "no AnyCodeExpr"
Data.Integer.Div.try_fast_div_1 !n2_0::I !n1_1::I !n0_2::I !d1_3::I !d0_4::I = case (<{StdInt.==_16}> n2_0 d1_3) (True -> <{_Tuple2!3}> False 0) (False -> let _x_2_0::I = Data.Integer.Div.divdu n2_0 n1_1 d1_3, r_2_1::I = select _x_2_0::_Tuple2 0, q_2_2 = select _x_2_0::_Tuple2 1, _x_2_3::I = Data.Integer.Div.mulud d0_4 q_2_2, ph_2_4::I = select _x_2_3::_Tuple2 0, pl_2_5 = select _x_2_3::_Tuple2 1 in case (case (Data.Integer.Div.ltU r_2_1 ph_2_4) (True -> True) (False -> case (<{StdInt.==_16}> r_2_1 ph_2_4) (True -> Data.Integer.Div.ltU n0_2 pl_2_5) (False -> False) ) ) (True -> let _x_4_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> ph_2_4 r_2_1) pl_2_5 n0_2, nnh_4_1::I = select _x_4_0::_Tuple2 0, nnl_4_2 = select _x_4_0::_Tuple2 1 in case (case (Data.Integer.Div.ltU nnh_4_1 d1_3) (True -> True) (False -> case (<{StdInt.==_16}> nnh_4_1 d1_3) (True -> Data.Integer.Div.ltU nnl_4_2 d0_4) (False -> False) ) ) (True -> let _x_6_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> d1_3 nnh_4_1) d0_4 nnl_4_2, q_6_1 = <{StdInt.-_7}> q_2_2 1 in case (case (StdBool.not (<{StdInt.==_16}> (select _x_6_0::_Tuple2 0) 0)) (True -> True) (False -> StdBool.not (Data.Integer.Div.ltU (select _x_6_0::_Tuple2 1) q_6_1)) ) (True -> <{_Tuple2!3}> True q_6_1) (False -> <{_Tuple2!3}> False 0) ) (False -> <{_Tuple2!3}> True (<{StdInt.-_7}> q_2_2 2)) ) (False -> let _x_4_0 = Data.Integer.Div.subLU (<{StdInt.-_7}> r_2_1 ph_2_4) n0_2 pl_2_5 in case (case (StdBool.not (<{StdInt.==_16}> (select _x_4_0::_Tuple2 0) 0)) (True -> True) (False -> StdBool.not (Data.Integer.Div.ltU (select _x_4_0::_Tuple2 1) q_2_2)) ) (True -> <{_Tuple2!3}> True q_2_2) (False -> <{_Tuple2!3}> False 0) ) ) 
Data.Integer.Div.copy_array_slice !i_0::I !s_1::I !sa_2 !da_3 = case (<{StdInt.<_17}> i_0 s_1) (True -> Data.Integer.Div.copy_array_slice (<{StdInt.+_6}> i_0 1) s_1 sa_2 (_SystemArray.update_13 da_3 i_0 (_SystemArray.select_11 sa_2 i_0))) (False -> da_3) 
Data.Integer.Div.shift_left_nd_extra_int_0 a1_0 a2_1 = let s_1_0::I = _SystemArray.size_12 a1_0 in _Tuple2 (Data.Integer.Div.copy_array_slice 0 s_1_0 a1_0 (_SystemArray.update_13 (Data.Integer.Div.create_unintialized_int_array (<{StdInt.+_6}> s_1_0 1)) s_1_0 0)) a2_1
Data.Integer.Div.shift_left_bits_a !i_0::I !c_1::I !n_2::I !n32_3::I !sa_4 !da_5 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_12 sa_4)) (True -> let !sai_2_0::I = _SystemArray.select_11 sa_4 i_0 in Data.Integer.Div.shift_left_bits_a (<{StdInt.+_6}> i_0 1) (Data.Integer.Div.ushiftr sai_2_0 n32_3) n_2 n32_3 sa_4 (_SystemArray.update_13 da_5 i_0 (<{StdInt.+_6}> c_1 (<{StdInt.<<}> sai_2_0 n_2)))) (False -> <{_Tuple2!3}> c_1 da_5) 
Data.Integer.Div.shift_left !n_bits_0::I !a_1 = select (Data.Integer.Div.shift_left_bits_a 0 0 n_bits_0 (<{StdInt.-_7}> 32 n_bits_0) a_1 (Data.Integer.Div.create_unintialized_int_array (_SystemArray.size_12 a_1)))::_Tuple2 1
Data.Integer.Div.shift_left_nd_extra_int !_x_0::I a1_1 a2_2 = case _x_0 (0 -> Data.Integer.Div.shift_left_nd_extra_int_0 a1_1 a2_2) (_ -> let s_1_0 = _SystemArray.size_12 a1_1, _x_1_1::I = Data.Integer.Div.shift_left_bits_a 0 0 _x_0 (<{StdInt.-_7}> 32 _x_0) a1_1 (Data.Integer.Div.create_unintialized_int_array (<{StdInt.+_6}> s_1_0 1)) in _Tuple2 (_SystemArray.update_13 (select _x_1_1::_Tuple2 1) s_1_0 (select _x_1_1::_Tuple2 0)) (Data.Integer.Div.shift_left _x_0 a2_2))
Data.Integer.Div.addLU !_x_0::I !_x_1::I !_x_2::I = error "no AnyCodeExpr"
Data.Integer.Div.submul !i_0::I !c_1::I !d_2::I !m_3::I !sa_4 !da_5 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_12 sa_4)) (True -> let !sai_2_0::I = _SystemArray.select_11 sa_4 i_0, !daj_2_1::I = _SystemArray.select_11 da_5 j_2_5, _x_2_2::I = Data.Integer.Div.mulud sai_2_0 m_3, _x_2_3 = Data.Integer.Div.addLU (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1) c_1, _x_2_4 = Data.Integer.Div.subLU 0 daj_2_1 (select _x_2_3::_Tuple2 1), j_2_5 = <{StdInt.+_6}> i_0 d_2 in Data.Integer.Div.submul (<{StdInt.+_6}> i_0 1) (<{StdInt.-_7}> (select _x_2_3::_Tuple2 0) (select _x_2_4::_Tuple2 0)) d_2 m_3 sa_4 (_SystemArray.update_13 da_5 j_2_5 (select _x_2_4::_Tuple2 1))) (False -> <{_Tuple2!3}> c_1 da_5) 
Data.Integer.Div.less::B !i_0::I !b_1::I !a1_2 !a2_3 = case (StdBool.not (<{StdInt.<_17}> i_0 0)) (True -> case (Data.Integer.Div.ltU (_SystemArray.select_11 a1_2 (<{StdInt.+_6}> i_0 b_1)) (_SystemArray.select_11 a2_3 i_0)) (True -> True) (False -> case (<{StdInt.==_16}> (_SystemArray.select_11 a1_2 (<{StdInt.+_6}> i_0 b_1)) (_SystemArray.select_11 a2_3 i_0)) (True -> Data.Integer.Div.less (<{StdInt.-_7}> i_0 1) b_1 a1_2 a2_3) (False -> False) ) ) (False -> False) 
Data.Integer.Div.add_integer_array !i_0::I !carry_1::I !d_2::I !sa_3 !da_4 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_12 sa_3)) (True -> let !i2_2_0::I = _SystemArray.select_11 da_4 j_2_3, _x_2_1::I = Data.Integer.Div.addLU 0 (_SystemArray.select_11 sa_3 i_0) carry_1, _x_2_2 = Data.Integer.Div.addLU (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1) i2_2_0, j_2_3 = <{StdInt.+_6}> i_0 d_2 in Data.Integer.Div.add_integer_array (<{StdInt.+_6}> i_0 1) (select _x_2_2::_Tuple2 0) d_2 sa_3 (_SystemArray.update_13 da_4 j_2_3 (select _x_2_2::_Tuple2 1))) (False -> <{_Tuple2!3}> carry_1 da_4) 
Data.Integer.Div.adjust !cmh_0::I !b_1::I !i_2::I !q_3::I !a2_4 !a1_5 = case (<{StdInt.==_16}> cmh_0 0) (True -> case (Data.Integer.Div.less (<{StdInt.-_7}> (_SystemArray.size_12 a2_4) 1) b_1 a1_5 a2_4) (True -> <{_Tuple2!3}> q_3 a1_5) (False -> StdMisc.abort "adjust 1") ) (False -> case (<{StdInt.<_17}> 0 cmh_0) (True -> let _x_3_0 = Data.Integer.Div.add_integer_array 0 0 b_1 a2_4 a1_5 in case (case (<{StdInt.==_16}> (select _x_3_0::_Tuple2 0) cmh_0) (True -> StdBool.not (<{StdInt.==_16}> q_3 0)) (False -> False) ) (True -> let a1_5_0 = select _x_3_0::_Tuple2 1 in case (Data.Integer.Div.less (<{StdInt.-_7}> (_SystemArray.size_12 a2_4) 1) b_1 a1_5_0 a2_4) (True -> <{_Tuple2!3}> (<{StdInt.-_7}> q_3 1) a1_5_0) (False -> StdMisc.abort "adjust 2") ) (False -> StdMisc.abort "second add_integer_array") ) (False -> StdMisc.abort (<{StdString.+++_11}> "adjust estimate too low " (StdString.toString_5 cmh_0))) ) 
Data.Integer.Div.submul2 !i_0::I !c_1::I !d_2::I !m_3::I !e_i_4::I !sa_5 !da_6 = case (<{StdInt.<_17}> i_0 e_i_4) (True -> let !sai_2_0::I = _SystemArray.select_11 sa_5 i_0, !daj_2_1::I = _SystemArray.select_11 da_6 j_2_5, _x_2_2::I = Data.Integer.Div.mulud sai_2_0 m_3, _x_2_3 = Data.Integer.Div.addLU (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1) c_1, _x_2_4 = Data.Integer.Div.subLU 0 daj_2_1 (select _x_2_3::_Tuple2 1), j_2_5 = <{StdInt.+_6}> i_0 d_2 in Data.Integer.Div.submul2 (<{StdInt.+_6}> i_0 1) (<{StdInt.-_7}> (select _x_2_3::_Tuple2 0) (select _x_2_4::_Tuple2 0)) d_2 m_3 e_i_4 sa_5 (_SystemArray.update_13 da_6 j_2_5 (select _x_2_4::_Tuple2 1))) (False -> <{_Tuple2!3}> c_1 da_6) 
Data.Integer.Div.div_last !i_0::I !s_1::I !a1_2 !a2_3 = let !h_1_0::I = _SystemArray.select_11 a1_2 i_0, !d_1_1::I = _SystemArray.select_11 a2_3 (<{StdInt.-_7}> s_1 1) in case (<{StdInt.==_16}> h_1_0 d_1_1) (True -> let b_3_0 = <{StdInt.-_7}> i_0 s_1, q_3_1 = -1, _x_3_2::I = Data.Integer.Div.submul 0 0 b_3_0 q_3_1 a2_3 a1_2, _x_3_3::I = Data.Integer.Div.adjust (<{StdInt.-_7}> (select _x_3_2::_Tuple2 0) h_1_0) b_3_0 i_0 q_3_1 a2_3 (select _x_3_2::_Tuple2 1) in _SystemArray.update_13 (select _x_3_3::_Tuple2 1) i_0 (select _x_3_3::_Tuple2 0)) (False -> let !l_3_0::I = _SystemArray.select_11 a1_2 (<{StdInt.-_7}> i_0 1), !m_3_1::I = _SystemArray.select_11 a2_3 (<{StdInt.-_7}> s_1 2), !nl_3_2::I = _SystemArray.select_11 a1_2 (<{StdInt.-_7}> i_0 2), _x_3_3::I = Data.Integer.Div.divdu h_1_0 l_3_0 d_1_1, r_3_4::I = select _x_3_3::_Tuple2 0, q_3_5 = select _x_3_3::_Tuple2 1, _x_3_6::I = Data.Integer.Div.mulud m_3_1 q_3_5, ph_3_7::I = select _x_3_6::_Tuple2 0, pl_3_8 = select _x_3_6::_Tuple2 1 in case (case (Data.Integer.Div.ltU r_3_4 ph_3_7) (True -> True) (False -> case (<{StdInt.==_16}> r_3_4 ph_3_7) (True -> Data.Integer.Div.ltU nl_3_2 pl_3_8) (False -> False) ) ) (True -> let _x_5_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> ph_3_7 r_3_4) pl_3_8 nl_3_2, nnh_5_1::I = select _x_5_0::_Tuple2 0, nnl_5_2 = select _x_5_0::_Tuple2 1 in case (case (Data.Integer.Div.ltU nnh_5_1 d_1_1) (True -> True) (False -> case (<{StdInt.==_16}> nnh_5_1 d_1_1) (True -> Data.Integer.Div.ltU nnl_5_2 m_3_1) (False -> False) ) ) (True -> let _x_7_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> d_1_1 nnh_5_1) m_3_1 nnl_5_2, nl_7_1::I = select _x_7_0::_Tuple2 1, q_7_2 = <{StdInt.-_7}> q_3_5 1 in case (case (StdBool.not (<{StdInt.==_16}> (select _x_7_0::_Tuple2 0) 0)) (True -> True) (False -> StdBool.not (Data.Integer.Div.ltU nl_7_1 q_7_2)) ) (True -> _SystemArray.update_13 a1_2 i_0 q_7_2) (False -> let _x_9_0 = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1) q_7_2 (<{StdInt.-_7}> s_1 2) a2_3 a1_2 in case (Data.Integer.Div.ltU nl_7_1 (select _x_9_0::_Tuple2 0)) (True -> _SystemArray.update_13 (select _x_9_0::_Tuple2 1) i_0 (<{StdInt.-_7}> q_7_2 1)) (False -> _SystemArray.update_13 (select _x_9_0::_Tuple2 1) i_0 q_7_2) ) ) (False -> _SystemArray.update_13 a1_2 i_0 (<{StdInt.-_7}> q_3_5 2)) ) (False -> let _x_5_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> r_3_4 ph_3_7) nl_3_2 pl_3_8, nl_5_1 = select _x_5_0::_Tuple2 1 in case (case (StdBool.not (<{StdInt.==_16}> (select _x_5_0::_Tuple2 0) 0)) (True -> True) (False -> StdBool.not (Data.Integer.Div.ltU nl_5_1 q_3_5)) ) (True -> _SystemArray.update_13 a1_2 i_0 q_3_5) (False -> let _x_7_0 = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1) q_3_5 (<{StdInt.-_7}> s_1 2) a2_3 a1_2 in case (Data.Integer.Div.ltU nl_5_1 (select _x_7_0::_Tuple2 0)) (True -> _SystemArray.update_13 (select _x_7_0::_Tuple2 1) i_0 (<{StdInt.-_7}> q_3_5 1)) (False -> _SystemArray.update_13 (select _x_7_0::_Tuple2 1) i_0 q_3_5) ) ) ) 
Data.Integer.Div.shift_left_array_elements !s_i_0::I !d_i_1::I !a_2 = case (<{StdInt.<_17}> s_i_0 (_SystemArray.size_12 a_2)) (True -> let !e_2_0::I = _SystemArray.select_11 a_2 s_i_0 in Data.Integer.Div.shift_left_array_elements (<{StdInt.+_6}> s_i_0 1) (<{StdInt.+_6}> d_i_1 1) (_SystemArray.update_13 a_2 d_i_1 e_2_0)) (False -> a_2) 
Data.Integer.Div.unsafe_resize_int_array !s_0::I !a_1 = error "no AnyCodeExpr"
Data.Integer.Div.resize_int_array !s_0::I !a_1 = case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_12 a_1) s_0)) (True -> Data.Integer.Div.unsafe_resize_int_array s_0 a_1) 
Data.Integer.Div.remove_begin_elements !n_0::I !a_1 = let !sa_1_0::I = _SystemArray.size_12 a_1_1, a_1_1 = Data.Integer.Div.shift_left_array_elements n_0 0 a_1 in Data.Integer.Div.resize_int_array (<{StdInt.-_7}> sa_1_0 n_0) a_1_1
Data.Integer.Div.shift_left_2_76 !_vArray_0 a2_1 !_x_2::I a_3 = case _x_2 (0 -> let !s_2_0::I = _SystemArray.size_12 a_3, !i1_2_1::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_2_0 1), !i0_2_2::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_2_0 2) in _Tuple2 i1_2_1 i0_2_2) (_ -> let !s_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a2_1, !i1_1_1::I = select _vArray_0::<{_SystemArray.Array;}> 3 a2_1 (<{StdInt.-_7}> s_1_0 1), !i0_1_2::I = select _vArray_0::<{_SystemArray.Array;}> 3 a2_1 (<{StdInt.-_7}> s_1_0 2), !ix_1_3::I = <{Data.Integer.Div._if;374;11_93}> (<{StdInt.<_17}> 2 s_1_0) a2_1 s_1_0 _vArray_0, nr_1_4::I = <{StdInt.-_7}> 32 _x_2 in _Tuple2 (StdInt.bitor (<{StdInt.<<}> i1_1_1 _x_2) (Data.Integer.Div.ushiftr i0_1_2 nr_1_4)) (StdInt.bitor (<{StdInt.<<}> i0_1_2 _x_2) (Data.Integer.Div.ushiftr ix_1_3 nr_1_4)))
<{Data.Integer.Div._if;374;11_93}>::I !_x_0::B a2_1 s_2::I _vArray_3 = case _x_0 (True -> select _vArray_3::<{_SystemArray.Array;}> 3 a2_1 (<{StdInt.-_7}> s_2 3)) (_ -> 0)
Data.Integer.Div.shift_left_3x_77 !_vArray_0 a1_1 !_x_2::I !a_3 = case _x_2 (0 -> let !s_2_0::I = _SystemArray.size_12 a_3, !i2_2_1::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_2_0 1), !i1_2_2::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_2_0 2) in _Tuple3 0 i2_2_1 i1_2_2) (_ -> let !s_1_0::I = _SystemArray.size_12 a_3 in case (StdBool.not (<{StdInt.<_17}> s_1_0 3)) (True -> let !i2_3_0::I = select _vArray_0::<{_SystemArray.Array;}> 3 a1_1 (<{StdInt.-_7}> s_1_0 1), !i1_3_1::I = select _vArray_0::<{_SystemArray.Array;}> 3 a1_1 (<{StdInt.-_7}> s_1_0 2), !i0_3_2::I = select _vArray_0::<{_SystemArray.Array;}> 3 a1_1 (<{StdInt.-_7}> s_1_0 3), nr_3_3::I = <{StdInt.-_7}> 32 _x_2 in _Tuple3 (Data.Integer.Div.ushiftr i2_3_0 nr_3_3) (StdInt.bitor (<{StdInt.<<}> i2_3_0 _x_2) (Data.Integer.Div.ushiftr i1_3_1 nr_3_3)) (StdInt.bitor (<{StdInt.<<}> i1_3_1 _x_2) (Data.Integer.Div.ushiftr i0_3_2 nr_3_3))) (False -> let !i2_3_0::I = select _vArray_0::<{_SystemArray.Array;}> 3 a1_1 1, !i1_3_1::I = select _vArray_0::<{_SystemArray.Array;}> 3 a1_1 0, nr_3_2::I = <{StdInt.-_7}> 32 _x_2 in _Tuple3 (Data.Integer.Div.ushiftr i2_3_0 nr_3_2) (StdInt.bitor (<{StdInt.<<}> i2_3_0 _x_2) (Data.Integer.Div.ushiftr i1_3_1 nr_3_2)) (<{StdInt.<<}> i1_3_1 _x_2)) )
Data.Integer.Div.div_integer_1_extra_int_60 !_vArray_0 !_vArray_1 a2_2 a1_3 !n_leading_zeros_4::I !a1_5 !a2_6 = let _x_1_0 = Data.Integer.Div.shift_left_3x_77 _vArray_1 a1_3 n_leading_zeros_4 a1_5, n2_1_1::I = select _x_1_0::_Tuple3 0, n1_1_2::I = select _x_1_0::_Tuple3 1, n0_1_3 = select _x_1_0::_Tuple3 2, _x_1_4::I = Data.Integer.Div.shift_left_2_76 _vArray_0 a2_2 n_leading_zeros_4 a2_6, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> let q_3_0::I = select _x_1_7::_Tuple2 1 in case (StdBool.not (<{StdInt.<_17}> q_3_0 0)) (True -> Data.Integer._Integer q_3_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 q_3_0)) ) (False -> let !s_3_0::I = _SystemArray.size_12 a1_3_3, !n_3_1::I = _SystemArray.size_12 a2_3_4, _x_3_2 = Data.Integer.Div.shift_left_nd_extra_int n_leading_zeros_4 a1_5 a2_6, a1_3_3 = select _x_3_2::_Tuple2 0, a2_3_4 = select _x_3_2::_Tuple2 1, a1_3_5 = Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_3_3 a2_3_4, a1_3_6 = Data.Integer.Div.remove_begin_elements n_3_1 a1_3_5 in case (StdBool.not (<{StdInt.<_17}> (_SystemArray.select_11 a1_3_6 0) 0)) (True -> Data.Integer._Integer (_SystemArray.select_11 a1_3_6 0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 a1_3_6) ) 
Data.Integer.Div.div_loop !i_0::I !a1_1 !a2_2 = let !s_1_0::I = _SystemArray.size_12 a2_2 in case (StdBool.not (<{StdInt.<_17}> s_1_0 i_0)) (True -> case (StdBool.not (<{StdInt.==_16}> i_0 s_1_0)) (True -> a1_1) (False -> Data.Integer.Div.div_last i_0 s_1_0 a1_1 a2_2) ) (False -> let !h_3_0::I = _SystemArray.select_11 a1_1 i_0, !d_3_1::I = _SystemArray.select_11 a2_2 (<{StdInt.-_7}> s_1_0 1) in case (<{StdInt.==_16}> h_3_0 d_3_1) (True -> let b_5_0 = <{StdInt.-_7}> i_0 s_1_0, q_5_1 = -1, _x_5_2::I = Data.Integer.Div.submul 0 0 b_5_0 q_5_1 a2_2 a1_1, _x_5_3::I = Data.Integer.Div.adjust (<{StdInt.-_7}> (select _x_5_2::_Tuple2 0) h_3_0) b_5_0 i_0 q_5_1 a2_2 (select _x_5_2::_Tuple2 1) in Data.Integer.Div.div_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (select _x_5_3::_Tuple2 1) i_0 (select _x_5_3::_Tuple2 0)) a2_2) (False -> let !l_5_0::I = _SystemArray.select_11 a1_1 (<{StdInt.-_7}> i_0 1), !m_5_1::I = _SystemArray.select_11 a2_2 (<{StdInt.-_7}> s_1_0 2), !nl_5_2::I = _SystemArray.select_11 a1_1 (<{StdInt.-_7}> i_0 2), _x_5_3::I = Data.Integer.Div.divdu h_3_0 l_5_0 d_3_1, r_5_4::I = select _x_5_3::_Tuple2 0, q_5_5 = select _x_5_3::_Tuple2 1, _x_5_6::I = Data.Integer.Div.mulud m_5_1 q_5_5, ph_5_7::I = select _x_5_6::_Tuple2 0, pl_5_8 = select _x_5_6::_Tuple2 1 in case (case (Data.Integer.Div.ltU r_5_4 ph_5_7) (True -> True) (False -> case (<{StdInt.==_16}> r_5_4 ph_5_7) (True -> Data.Integer.Div.ltU nl_5_2 pl_5_8) (False -> False) ) ) (True -> let _x_7_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> ph_5_7 r_5_4) pl_5_8 nl_5_2, nnh_7_1::I = select _x_7_0::_Tuple2 0, nnl_7_2 = select _x_7_0::_Tuple2 1 in case (case (Data.Integer.Div.ltU nnh_7_1 d_3_1) (True -> True) (False -> case (<{StdInt.==_16}> nnh_7_1 d_3_1) (True -> Data.Integer.Div.ltU nnl_7_2 m_5_1) (False -> False) ) ) (True -> let _x_9_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> d_3_1 nnh_7_1) m_5_1 nnl_7_2, nh_9_1::I = select _x_9_0::_Tuple2 0, q_9_2 = <{StdInt.-_7}> q_5_5 1, _x_9_3::I = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1_0) q_9_2 (<{StdInt.-_7}> s_1_0 2) a2_2 a1_1, c_9_4::I = select _x_9_3::_Tuple2 0, nl_9_5 = select _x_9_0::_Tuple2 1 in case (case (<{StdInt.==_16}> nh_9_1 0) (True -> Data.Integer.Div.ltU nl_9_5 c_9_4) (False -> False) ) (True -> let _x_11_0 = Data.Integer.Div.subLU nh_9_1 nl_9_5 c_9_4 in Data.Integer.Div.div_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (select (Data.Integer.Div.add_integer_array 0 0 (<{StdInt.-_7}> i_0 s_1_0) a2_2 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_9_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_11_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_11_0::_Tuple2 0)))::_Tuple2 1) i_0 (<{StdInt.-_7}> q_9_2 1)) a2_2) (False -> let _x_11_0 = Data.Integer.Div.subLU nh_9_1 nl_9_5 c_9_4 in Data.Integer.Div.div_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_9_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_11_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_11_0::_Tuple2 0)) i_0 q_9_2) a2_2) ) (False -> let _x_9_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> d_3_1 nnh_7_1) m_5_1 nnl_7_2, nh_9_1::I = select _x_9_0::_Tuple2 0, nl_9_2 = select _x_9_0::_Tuple2 1, _x_9_3::I = Data.Integer.Div.addLU (<{StdInt.+_6}> nh_9_1 d_3_1) nl_9_2 m_5_1, nh_9_4::I = select _x_9_3::_Tuple2 0, q_9_5 = <{StdInt.-_7}> q_5_5 2, _x_9_6::I = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1_0) q_9_5 (<{StdInt.-_7}> s_1_0 2) a2_2 a1_1, c_9_7::I = select _x_9_6::_Tuple2 0, nl_9_8 = select _x_9_3::_Tuple2 1 in case (case (<{StdInt.==_16}> nh_9_4 0) (True -> Data.Integer.Div.ltU nl_9_8 c_9_7) (False -> False) ) (True -> StdMisc.abort "div_loop 2") (False -> let _x_11_0 = Data.Integer.Div.subLU nh_9_4 nl_9_8 c_9_7 in Data.Integer.Div.div_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_9_6::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_11_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_11_0::_Tuple2 0)) i_0 q_9_5) a2_2) ) ) (False -> let _x_7_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> r_5_4 ph_5_7) nl_5_2 pl_5_8, nh_7_1 = select _x_7_0::_Tuple2 0, nl_7_2::I = select _x_7_0::_Tuple2 1, _x_7_3::I = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1_0) q_5_5 (<{StdInt.-_7}> s_1_0 2) a2_2 a1_1, c_7_4 = select _x_7_3::_Tuple2 0 in case (case (<{StdInt.==_16}> nh_7_1 0) (True -> Data.Integer.Div.ltU nl_7_2 c_7_4) (False -> False) ) (True -> let _x_9_0 = Data.Integer.Div.subLU nh_7_1 nl_7_2 c_7_4 in Data.Integer.Div.div_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (select (Data.Integer.Div.add_integer_array 0 0 (<{StdInt.-_7}> i_0 s_1_0) a2_2 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_7_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_9_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_9_0::_Tuple2 0)))::_Tuple2 1) i_0 (<{StdInt.-_7}> q_5_5 1)) a2_2) (False -> let _x_9_0 = Data.Integer.Div.subLU nh_7_1 nl_7_2 c_7_4 in Data.Integer.Div.div_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_7_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_9_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_9_0::_Tuple2 0)) i_0 q_5_5) a2_2) ) ) ) 
Data.Integer.Div.shift_left_3_64 !_vArray_0 !_vArray_1 a1_2 !_x_3::I a_4 = case _x_3 (0 -> let !s_2_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a1_2, !i2_2_1::I = select _vArray_1::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_2_0 1), !i1_2_2::I = select _vArray_1::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_2_0 2), !i0_2_3::I = select _vArray_1::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_2_0 3) in _Tuple3 i2_2_1 i1_2_2 i0_2_3) (_ -> let !s_1_0::I = select _vArray_1::<{_SystemArray.Array;}> 4 a_4, !i2_1_1::I = select _vArray_1::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_1_0 1), !i1_1_2::I = select _vArray_1::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_1_0 2), !i0_1_3::I = select _vArray_1::<{_SystemArray.Array;}> 3 a_4 (<{StdInt.-_7}> s_1_0 3), !ix_1_4::I = <{Data.Integer.Div._if;415;11_94}> (<{StdInt.<_17}> 3 s_1_0) a_4 s_1_0 _vArray_1, nr_1_5::I = <{StdInt.-_7}> 32 _x_3 in _Tuple3 (StdInt.bitor (<{StdInt.<<}> i2_1_1 _x_3) (Data.Integer.Div.ushiftr i1_1_2 nr_1_5)) (StdInt.bitor (<{StdInt.<<}> i1_1_2 _x_3) (Data.Integer.Div.ushiftr i0_1_3 nr_1_5)) (StdInt.bitor (<{StdInt.<<}> i0_1_3 _x_3) (Data.Integer.Div.ushiftr ix_1_4 nr_1_5)))
<{Data.Integer.Div._if;415;11_94}>::I !_x_0::B a_1 s_2::I _vArray_3 = case _x_0 (True -> select _vArray_3::<{_SystemArray.Array;}> 3 a_1 (<{StdInt.-_7}> s_2 4)) (_ -> 0)
<{Data.Integer.Div.cu;1004;9_67}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{Data.Integer.Div.cu;1004;9_67}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{Data.Integer.Div.cu;1004;9_78}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_14 g_a_4 c_i_2 in <{Data.Integer.Div.cu;1004;9_78}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{Data.Integer.Div.cu;1004;9_79}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_14 g_a_3 c_i_1 in <{Data.Integer.Div.cu;1004;9_79}> (_SystemArray.update_13 c_a_0 c_i_1 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
Data.Integer.Div.copy_array !a_0 = let _x_1_0::I = _SystemArray.usize_15 a_0, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{Data.Integer.Div.cu;1004;9_79}> (_SystemArray._createArray_8 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
Data.Integer.Div.shift_left_nd_no_extra_int !_x_0::I a1_1 a2_2 = case _x_0 (0 -> _Tuple2 (Data.Integer.Div.copy_array a1_1) a2_2) (_ -> _Tuple2 (Data.Integer.Div.shift_left _x_0 a1_1) (Data.Integer.Div.shift_left _x_0 a2_2))
Data.Integer.Div.shift_left_3_80 !_vArray_0 a1_1 !_x_2::I !a_3 = case _x_2 (0 -> let !s_2_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a1_1, !i2_2_1::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_2_0 1), !i1_2_2::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_2_0 2), !i0_2_3::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_2_0 3) in _Tuple3 i2_2_1 i1_2_2 i0_2_3) (_ -> let !s_1_0::I = _SystemArray.size_12 a_3, !i2_1_1::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_1_0 1), !i1_1_2::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_1_0 2), !i0_1_3::I = _SystemArray.select_11 a_3 (<{StdInt.-_7}> s_1_0 3), !ix_1_4::I = <{Data.Integer.Div._if;415;11_95}> (<{StdInt.<_17}> 3 s_1_0) a_3 s_1_0, nr_1_5::I = <{StdInt.-_7}> 32 _x_2 in _Tuple3 (StdInt.bitor (<{StdInt.<<}> i2_1_1 _x_2) (Data.Integer.Div.ushiftr i1_1_2 nr_1_5)) (StdInt.bitor (<{StdInt.<<}> i1_1_2 _x_2) (Data.Integer.Div.ushiftr i0_1_3 nr_1_5)) (StdInt.bitor (<{StdInt.<<}> i0_1_3 _x_2) (Data.Integer.Div.ushiftr ix_1_4 nr_1_5)))
<{Data.Integer.Div._if;415;11_95}>::I !_x_0::B a_1 s_2::I = case _x_0 (True -> _SystemArray.select_11 a_1 (<{StdInt.-_7}> s_2 4)) (_ -> 0)
Data.Integer.Div.div_integer_1_no_extra_int_61 !_vArray_0 !_vArray_1 a2_2 a1_3 !n_leading_zeros_4::I !a1_5 !a2_6 = let _x_1_0 = Data.Integer.Div.shift_left_3_80 _vArray_1 a1_3 n_leading_zeros_4 a1_5, n2_1_1::I = select _x_1_0::_Tuple3 0, n1_1_2::I = select _x_1_0::_Tuple3 1, n0_1_3 = select _x_1_0::_Tuple3 2, _x_1_4::I = Data.Integer.Div.shift_left_2_76 _vArray_0 a2_2 n_leading_zeros_4 a2_6, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> let q_3_0::I = select _x_1_7::_Tuple2 1 in case (StdBool.not (<{StdInt.<_17}> q_3_0 0)) (True -> Data.Integer._Integer q_3_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 q_3_0)) ) (False -> let !s_3_0::I = _SystemArray.size_12 a1_3_3, !n_3_1::I = _SystemArray.size_12 a2_3_4, _x_3_2 = Data.Integer.Div.shift_left_nd_no_extra_int n_leading_zeros_4 a1_5 a2_6, a1_3_3 = select _x_3_2::_Tuple2 0, a2_3_4 = select _x_3_2::_Tuple2 1, a1_3_5 = Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_3_3 a2_3_4, a1_3_6 = Data.Integer.Div.remove_begin_elements n_3_1 a1_3_5 in case (StdBool.not (<{StdInt.<_17}> (_SystemArray.select_11 a1_3_6 0) 0)) (True -> Data.Integer._Integer (_SystemArray.select_11 a1_3_6 0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 a1_3_6) ) 
Data.Integer.Div.shift_left_2_82 a2_0 !_x_1::I a_2 = case _x_1 (0 -> let !s_2_0::I = _SystemArray.size_12 a_2, !i1_2_1::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_2_0 1), !i0_2_2::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_2_0 2) in _Tuple2 i1_2_1 i0_2_2) (_ -> let !s_1_0::I = _SystemArray.size_12 a2_0, !i1_1_1::I = _SystemArray.select_11 a2_0 (<{StdInt.-_7}> s_1_0 1), !i0_1_2::I = _SystemArray.select_11 a2_0 (<{StdInt.-_7}> s_1_0 2), !ix_1_3::I = <{Data.Integer.Div._if;374;11_96}> (<{StdInt.<_17}> 2 s_1_0) a2_0 s_1_0, nr_1_4::I = <{StdInt.-_7}> 32 _x_1 in _Tuple2 (StdInt.bitor (<{StdInt.<<}> i1_1_1 _x_1) (Data.Integer.Div.ushiftr i0_1_2 nr_1_4)) (StdInt.bitor (<{StdInt.<<}> i0_1_2 _x_1) (Data.Integer.Div.ushiftr ix_1_3 nr_1_4)))
<{Data.Integer.Div._if;374;11_96}>::I !_x_0::B a2_1 s_2::I = case _x_0 (True -> _SystemArray.select_11 a2_1 (<{StdInt.-_7}> s_2 3)) (_ -> 0)
Data.Integer.Div.div_integer_1_extra_int_81 !_vArray_0 a2_1 a1_2 !n_leading_zeros_3::I !a1_4 !a2_5 = let _x_1_0 = Data.Integer.Div.shift_left_3x_77 _vArray_0 a1_2 n_leading_zeros_3 a1_4, n2_1_1::I = select _x_1_0::_Tuple3 0, n1_1_2::I = select _x_1_0::_Tuple3 1, n0_1_3 = select _x_1_0::_Tuple3 2, _x_1_4::I = Data.Integer.Div.shift_left_2_82 a2_1 n_leading_zeros_3 a2_5, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> let q_3_0::I = select _x_1_7::_Tuple2 1 in case (StdBool.not (<{StdInt.<_17}> q_3_0 0)) (True -> Data.Integer._Integer q_3_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 q_3_0)) ) (False -> let !s_3_0::I = _SystemArray.size_12 a1_3_3, !n_3_1::I = _SystemArray.size_12 a2_3_4, _x_3_2 = Data.Integer.Div.shift_left_nd_extra_int n_leading_zeros_3 a1_4 a2_5, a1_3_3 = select _x_3_2::_Tuple2 0, a2_3_4 = select _x_3_2::_Tuple2 1, a1_3_5 = Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_3_3 a2_3_4, a1_3_6 = Data.Integer.Div.remove_begin_elements n_3_1 a1_3_5 in case (StdBool.not (<{StdInt.<_17}> (_SystemArray.select_11 a1_3_6 0) 0)) (True -> Data.Integer._Integer (_SystemArray.select_11 a1_3_6 0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 a1_3_6) ) 
Data.Integer.Div.div_integer_1_no_extra_int_83 !_vArray_0 a2_1 a1_2 !n_leading_zeros_3::I !a1_4 !a2_5 = let _x_1_0 = Data.Integer.Div.shift_left_3_80 _vArray_0 a1_2 n_leading_zeros_3 a1_4, n2_1_1::I = select _x_1_0::_Tuple3 0, n1_1_2::I = select _x_1_0::_Tuple3 1, n0_1_3 = select _x_1_0::_Tuple3 2, _x_1_4::I = Data.Integer.Div.shift_left_2_82 a2_1 n_leading_zeros_3 a2_5, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> let q_3_0::I = select _x_1_7::_Tuple2 1 in case (StdBool.not (<{StdInt.<_17}> q_3_0 0)) (True -> Data.Integer._Integer q_3_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 q_3_0)) ) (False -> let !s_3_0::I = _SystemArray.size_12 a1_3_3, !n_3_1::I = _SystemArray.size_12 a2_3_4, _x_3_2 = Data.Integer.Div.shift_left_nd_no_extra_int n_leading_zeros_3 a1_4 a2_5, a1_3_3 = select _x_3_2::_Tuple2 0, a2_3_4 = select _x_3_2::_Tuple2 1, a1_3_5 = Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_3_3 a2_3_4, a1_3_6 = Data.Integer.Div.remove_begin_elements n_3_1 a1_3_5 in case (StdBool.not (<{StdInt.<_17}> (_SystemArray.select_11 a1_3_6 0) 0)) (True -> Data.Integer._Integer (_SystemArray.select_11 a1_3_6 0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 a1_3_6) ) 
Data.Integer.Div.shift_left_3x_85 a1_0 !_x_1::I !a_2 = case _x_1 (0 -> let !s_2_0::I = _SystemArray.size_12 a_2, !i2_2_1::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_2_0 1), !i1_2_2::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_2_0 2) in _Tuple3 0 i2_2_1 i1_2_2) (_ -> let !s_1_0::I = _SystemArray.size_12 a_2 in case (StdBool.not (<{StdInt.<_17}> s_1_0 3)) (True -> let !i2_3_0::I = _SystemArray.select_11 a1_0 (<{StdInt.-_7}> s_1_0 1), !i1_3_1::I = _SystemArray.select_11 a1_0 (<{StdInt.-_7}> s_1_0 2), !i0_3_2::I = _SystemArray.select_11 a1_0 (<{StdInt.-_7}> s_1_0 3), nr_3_3::I = <{StdInt.-_7}> 32 _x_1 in _Tuple3 (Data.Integer.Div.ushiftr i2_3_0 nr_3_3) (StdInt.bitor (<{StdInt.<<}> i2_3_0 _x_1) (Data.Integer.Div.ushiftr i1_3_1 nr_3_3)) (StdInt.bitor (<{StdInt.<<}> i1_3_1 _x_1) (Data.Integer.Div.ushiftr i0_3_2 nr_3_3))) (False -> let !i2_3_0::I = _SystemArray.select_11 a1_0 1, !i1_3_1::I = _SystemArray.select_11 a1_0 0, nr_3_2::I = <{StdInt.-_7}> 32 _x_1 in _Tuple3 (Data.Integer.Div.ushiftr i2_3_0 nr_3_2) (StdInt.bitor (<{StdInt.<<}> i2_3_0 _x_1) (Data.Integer.Div.ushiftr i1_3_1 nr_3_2)) (<{StdInt.<<}> i1_3_1 _x_1)) )
Data.Integer.Div.div_integer_1_extra_int_84 a2_0 a1_1 !n_leading_zeros_2::I !a1_3 !a2_4 = let _x_1_0 = Data.Integer.Div.shift_left_3x_85 a1_1 n_leading_zeros_2 a1_3, n2_1_1::I = select _x_1_0::_Tuple3 0, n1_1_2::I = select _x_1_0::_Tuple3 1, n0_1_3 = select _x_1_0::_Tuple3 2, _x_1_4::I = Data.Integer.Div.shift_left_2_82 a2_0 n_leading_zeros_2 a2_4, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> let q_3_0::I = select _x_1_7::_Tuple2 1 in case (StdBool.not (<{StdInt.<_17}> q_3_0 0)) (True -> Data.Integer._Integer q_3_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 q_3_0)) ) (False -> let !s_3_0::I = _SystemArray.size_12 a1_3_3, !n_3_1::I = _SystemArray.size_12 a2_3_4, _x_3_2 = Data.Integer.Div.shift_left_nd_extra_int n_leading_zeros_2 a1_3 a2_4, a1_3_3 = select _x_3_2::_Tuple2 0, a2_3_4 = select _x_3_2::_Tuple2 1, a1_3_5 = Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_3_3 a2_3_4, a1_3_6 = Data.Integer.Div.remove_begin_elements n_3_1 a1_3_5 in case (StdBool.not (<{StdInt.<_17}> (_SystemArray.select_11 a1_3_6 0) 0)) (True -> Data.Integer._Integer (_SystemArray.select_11 a1_3_6 0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 a1_3_6) ) 
Data.Integer.Div.shift_left_3_87 a1_0 !_x_1::I !a_2 = case _x_1 (0 -> let !s_2_0::I = _SystemArray.size_12 a1_0, !i2_2_1::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_2_0 1), !i1_2_2::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_2_0 2), !i0_2_3::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_2_0 3) in _Tuple3 i2_2_1 i1_2_2 i0_2_3) (_ -> let !s_1_0::I = _SystemArray.size_12 a_2, !i2_1_1::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_1_0 1), !i1_1_2::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_1_0 2), !i0_1_3::I = _SystemArray.select_11 a_2 (<{StdInt.-_7}> s_1_0 3), !ix_1_4::I = <{Data.Integer.Div._if;415;11_97}> (<{StdInt.<_17}> 3 s_1_0) a_2 s_1_0, nr_1_5::I = <{StdInt.-_7}> 32 _x_1 in _Tuple3 (StdInt.bitor (<{StdInt.<<}> i2_1_1 _x_1) (Data.Integer.Div.ushiftr i1_1_2 nr_1_5)) (StdInt.bitor (<{StdInt.<<}> i1_1_2 _x_1) (Data.Integer.Div.ushiftr i0_1_3 nr_1_5)) (StdInt.bitor (<{StdInt.<<}> i0_1_3 _x_1) (Data.Integer.Div.ushiftr ix_1_4 nr_1_5)))
<{Data.Integer.Div._if;415;11_97}>::I !_x_0::B a_1 s_2::I = case _x_0 (True -> _SystemArray.select_11 a_1 (<{StdInt.-_7}> s_2 4)) (_ -> 0)
Data.Integer.Div.div_integer_1_no_extra_int_86 a2_0 a1_1 !n_leading_zeros_2::I !a1_3 !a2_4 = let _x_1_0 = Data.Integer.Div.shift_left_3_87 a1_1 n_leading_zeros_2 a1_3, n2_1_1::I = select _x_1_0::_Tuple3 0, n1_1_2::I = select _x_1_0::_Tuple3 1, n0_1_3 = select _x_1_0::_Tuple3 2, _x_1_4::I = Data.Integer.Div.shift_left_2_82 a2_0 n_leading_zeros_2 a2_4, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> let q_3_0::I = select _x_1_7::_Tuple2 1 in case (StdBool.not (<{StdInt.<_17}> q_3_0 0)) (True -> Data.Integer._Integer q_3_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 q_3_0)) ) (False -> let !s_3_0::I = _SystemArray.size_12 a1_3_3, !n_3_1::I = _SystemArray.size_12 a2_3_4, _x_3_2 = Data.Integer.Div.shift_left_nd_no_extra_int n_leading_zeros_2 a1_3 a2_4, a1_3_3 = select _x_3_2::_Tuple2 0, a2_3_4 = select _x_3_2::_Tuple2 1, a1_3_5 = Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_3_3 a2_3_4, a1_3_6 = Data.Integer.Div.remove_begin_elements n_3_1 a1_3_5 in case (StdBool.not (<{StdInt.<_17}> (_SystemArray.select_11 a1_3_6 0) 0)) (True -> Data.Integer._Integer (_SystemArray.select_11 a1_3_6 0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 a1_3_6) ) 
Data.Integer.Div.div_integer_integer !a1_0 !a2_1 = case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1))) (True -> case (Data.Integer.Div.extra_int a1_0 a2_1) (True -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1)) (True -> Data.Integer.Div.div_integer_1_extra_int_84 a2_1 a1_0 (Data.Integer.Div.n_leading_zeros_32 (_SystemArray.select_11 a2_1 (<{StdInt.-_7}> (_SystemArray.size_12 a2_1) 1))) a1_0 a2_1) (False -> let !s_4_0::I = _SystemArray.size_12 a1_4_3, _x_4_1 = Data.Integer.Div.shift_left_nd_extra_int (Data.Integer.Div.n_leading_zeros_32 (_SystemArray.select_11 a2_1 (<{StdInt.-_7}> (_SystemArray.size_12 a2_1) 1))) a1_0 a2_1, a2_4_2 = select _x_4_1::_Tuple2 1, a1_4_3 = select _x_4_1::_Tuple2 0 in Data.Integer._Integer 0 (Data.Integer.Div.remove_begin_elements (_SystemArray.size_12 a2_4_2) (Data.Integer.Div.div_loop (<{StdInt.-_7}> s_4_0 1) a1_4_3 a2_4_2))) ) (False -> let n_3_0::I = <{StdInt.-_7}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1) in case (StdBool.not (<{StdInt.<_17}> 1 n_3_0)) (True -> case (<{StdInt.==_16}> n_3_0 0) (True -> Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) (False -> Data.Integer.Div.div_integer_1_no_extra_int_86 a2_1 a1_0 (Data.Integer.Div.n_leading_zeros_32 (_SystemArray.select_11 a2_1 (<{StdInt.-_7}> (_SystemArray.size_12 a2_1) 1))) a1_0 a2_1) ) (False -> let !s_5_0::I = _SystemArray.size_12 a1_5_3, _x_5_1 = Data.Integer.Div.shift_left_nd_no_extra_int (Data.Integer.Div.n_leading_zeros_32 (_SystemArray.select_11 a2_1 (<{StdInt.-_7}> (_SystemArray.size_12 a2_1) 1))) a1_0 a2_1, a2_5_2 = select _x_5_1::_Tuple2 1, a1_5_3 = select _x_5_1::_Tuple2 0 in Data.Integer._Integer 0 (Data.Integer.Div.remove_begin_elements (_SystemArray.size_12 a2_5_2) (Data.Integer.Div.div_loop (<{StdInt.-_7}> s_5_0 1) a1_5_3 a2_5_2))) ) ) (False -> Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) 
Data.Integer.Div.make_positive_integer_negative !_x_0 = case _x_0 (Data.Integer._Integer integer_s_1_0 integer_a_1_1 -> case (<{StdInt.==_16}> (_SystemArray.size_12 integer_a_1_1) 0) (True -> case (StdBool.not (<{StdInt.==_16}> integer_s_1_0 -2147483648)) (True -> Data.Integer._Integer (<{StdInt.~_15}> integer_s_1_0) integer_a_1_1) (False -> Data.Integer._Integer -1 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 integer_s_1_0)) ) (False -> Data.Integer._Integer -1 integer_a_1_1) ) 
Data.Integer.Div.div_integer_size_1_integer_88 !s1_0::I !a1_1 !i2_2::I = case (StdBool.not (<{StdInt.<_17}> i2_2 0)) (True -> Data.Integer.Div.sign_and_unsigned_int_to_integer_52 s1_0 (select (Data.Integer.Div.divdu 0 (_SystemArray.select_11 a1_1 0) i2_2)::_Tuple2 1)) (False -> Data.Integer.Div.neg_sign_and_unsigned_int_to_integer_53 s1_0 (select (Data.Integer.Div.divdu 0 (_SystemArray.select_11 a1_1 0) (<{StdInt.~_15}> i2_2))::_Tuple2 1)) 
Data.Integer.Div.div_integer_size_2_integer_89 !s1_0::I !a1_1 !i2_2::I = case (StdBool.not (<{StdInt.<_17}> i2_2 0)) (True -> let n1_2_0::I = _SystemArray.select_11 a1_1 1 in case (Data.Integer.Div.ltU n1_2_0 i2_2) (True -> Data.Integer.Div.sign_and_unsigned_int_to_integer_52 s1_0 (select (Data.Integer.Div.divdu n1_2_0 (_SystemArray.select_11 a1_1 0) i2_2)::_Tuple2 1)) (False -> let _x_4_0::I = Data.Integer.Div.divdu 0 n1_2_0 i2_2, q1_4_1 = select _x_4_0::_Tuple2 1 in case (<{StdInt.==_16}> q1_4_1 0) (True -> Data.Integer.Div.sign_and_unsigned_int_to_integer_52 s1_0 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (_SystemArray.select_11 a1_1 0) i2_2)::_Tuple2 1)) (False -> Data.Integer._Integer s1_0 (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray._createArray_8 2) 1 q1_4_1) 0 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (_SystemArray.select_11 a1_1 0) i2_2)::_Tuple2 1))) ) ) (False -> let n1_2_0::I = _SystemArray.select_11 a1_1 1, i2_2_1::I = <{StdInt.~_15}> i2_2 in case (Data.Integer.Div.ltU n1_2_0 i2_2_1) (True -> Data.Integer.Div.neg_sign_and_unsigned_int_to_integer_53 s1_0 (select (Data.Integer.Div.divdu n1_2_0 (_SystemArray.select_11 a1_1 0) i2_2_1)::_Tuple2 1)) (False -> let _x_4_0::I = Data.Integer.Div.divdu 0 n1_2_0 i2_2_1, q1_4_1 = select _x_4_0::_Tuple2 1 in case (<{StdInt.==_16}> q1_4_1 0) (True -> Data.Integer.Div.neg_sign_and_unsigned_int_to_integer_53 s1_0 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (_SystemArray.select_11 a1_1 0) i2_2_1)::_Tuple2 1)) (False -> Data.Integer._Integer (StdInt.bitnot s1_0) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray._createArray_8 2) 1 q1_4_1) 0 (select (Data.Integer.Div.divdu (select _x_4_0::_Tuple2 0) (_SystemArray.select_11 a1_1 0) i2_2_1)::_Tuple2 1))) ) ) 
Data.Integer.Div.div_integer !_x_0 !_x_1 = case _x_0 (Data.Integer._Integer s1_1_0 a1_1_1 -> case _x_1 (Data.Integer._Integer s2_2_0 a2_2_1 -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_1_1) 0) (True -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 0) (True -> case (case (StdBool.not (<{StdInt.==_16}> s1_1_0 -2147483648)) (True -> True) (False -> StdBool.not (<{StdInt.==_16}> s2_2_0 -1)) ) (True -> Data.Integer._Integer (<{StdInt./_10}> s1_1_0 s2_2_0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 -2147483648)) ) (False -> case (case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 1) (True -> case (<{StdInt.==_16}> (_SystemArray.select_11 a2_2_1 0) -2147483648) (True -> <{StdInt.==_16}> s1_1_0 -2147483648) (False -> False) ) (False -> False) ) (True -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> Data.Integer._Integer -1 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 1 (_SystemArray._createArray_8 0)) ) (False -> Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) ) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 0) (True -> case (StdBool.not (<{StdInt.<_17}> 2 (_SystemArray.size_12 a1_1_1))) (True -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_1_1) 1) (True -> Data.Integer.Div.div_integer_size_1_integer_88 s1_1_0 a1_1_1 s2_2_0) (False -> Data.Integer.Div.div_integer_size_2_integer_89 s1_1_0 a1_1_1 s2_2_0) ) (False -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> Data.Integer._Integer s1_1_0 (Data.Integer.Div.div_integer_unsigned_int_55 a1_1_1 s2_2_0)) (False -> Data.Integer._Integer (StdInt.bitnot s1_1_0) (Data.Integer.Div.div_integer_unsigned_int_55 a1_1_1 (<{StdInt.~_15}> s2_2_0))) ) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 1) (True -> let !s_6_0::I = StdInt.bitxor s1_1_0 s2_2_0 in Data.Integer._Integer s_6_0 (Data.Integer.Div.div_integer_unsigned_int_55 a1_1_1 (_SystemArray.select_11 a2_2_1 0))) (False -> case (StdBool.not (<{StdInt.<_17}> (StdInt.bitxor s1_1_0 s2_2_0) 0)) (True -> Data.Integer.Div.div_integer_integer a1_1_1 a2_2_1) (False -> Data.Integer.Div.make_positive_integer_negative (Data.Integer.Div.div_integer_integer a1_1_1 a2_2_1)) ) ) ) ) ) 
Data.Integer.Div.make_integer_s_uint !s_0::I !n_1::I = case (StdBool.not (<{StdInt.<_17}> n_1 0)) (True -> case (StdBool.not (<{StdInt.<_17}> s_0 0)) (True -> Data.Integer._Integer n_1 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer (<{StdInt.~_15}> n_1) (_SystemArray._createArray_8 0)) ) (False -> case (case (<{StdInt.==_16}> n_1 -2147483648) (True -> <{StdInt.<_17}> s_0 0) (False -> False) ) (True -> Data.Integer._Integer n_1 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer s_0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 n_1)) ) 
Data.Integer.Div.div_rem_loop !i_0::I !a1_1 !a2_2 = let !s_1_0::I = _SystemArray.size_12 a2_2 in case (<{StdInt.<_17}> i_0 s_1_0) (True -> a1_1) (False -> let !h_3_0::I = _SystemArray.select_11 a1_1 i_0, !d_3_1::I = _SystemArray.select_11 a2_2 (<{StdInt.-_7}> s_1_0 1) in case (<{StdInt.==_16}> h_3_0 d_3_1) (True -> let b_5_0 = <{StdInt.-_7}> i_0 s_1_0, q_5_1 = -1, _x_5_2::I = Data.Integer.Div.submul 0 0 b_5_0 q_5_1 a2_2 a1_1, _x_5_3::I = Data.Integer.Div.adjust (<{StdInt.-_7}> (select _x_5_2::_Tuple2 0) h_3_0) b_5_0 i_0 q_5_1 a2_2 (select _x_5_2::_Tuple2 1) in Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (select _x_5_3::_Tuple2 1) i_0 (select _x_5_3::_Tuple2 0)) a2_2) (False -> let !l_5_0::I = _SystemArray.select_11 a1_1 (<{StdInt.-_7}> i_0 1), !m_5_1::I = _SystemArray.select_11 a2_2 (<{StdInt.-_7}> s_1_0 2), !nl_5_2::I = _SystemArray.select_11 a1_1 (<{StdInt.-_7}> i_0 2), _x_5_3::I = Data.Integer.Div.divdu h_3_0 l_5_0 d_3_1, r_5_4::I = select _x_5_3::_Tuple2 0, q_5_5 = select _x_5_3::_Tuple2 1, _x_5_6::I = Data.Integer.Div.mulud m_5_1 q_5_5, ph_5_7::I = select _x_5_6::_Tuple2 0, pl_5_8 = select _x_5_6::_Tuple2 1 in case (case (Data.Integer.Div.ltU r_5_4 ph_5_7) (True -> True) (False -> case (<{StdInt.==_16}> r_5_4 ph_5_7) (True -> Data.Integer.Div.ltU nl_5_2 pl_5_8) (False -> False) ) ) (True -> let _x_7_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> ph_5_7 r_5_4) pl_5_8 nl_5_2, nnh_7_1::I = select _x_7_0::_Tuple2 0, nnl_7_2 = select _x_7_0::_Tuple2 1 in case (case (Data.Integer.Div.ltU nnh_7_1 d_3_1) (True -> True) (False -> case (<{StdInt.==_16}> nnh_7_1 d_3_1) (True -> Data.Integer.Div.ltU nnl_7_2 m_5_1) (False -> False) ) ) (True -> let _x_9_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> d_3_1 nnh_7_1) m_5_1 nnl_7_2, nh_9_1::I = select _x_9_0::_Tuple2 0, q_9_2 = <{StdInt.-_7}> q_5_5 1, _x_9_3::I = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1_0) q_9_2 (<{StdInt.-_7}> s_1_0 2) a2_2 a1_1, c_9_4::I = select _x_9_3::_Tuple2 0, nl_9_5 = select _x_9_0::_Tuple2 1 in case (case (<{StdInt.==_16}> nh_9_1 0) (True -> Data.Integer.Div.ltU nl_9_5 c_9_4) (False -> False) ) (True -> let _x_11_0 = Data.Integer.Div.subLU nh_9_1 nl_9_5 c_9_4 in Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (select (Data.Integer.Div.add_integer_array 0 0 (<{StdInt.-_7}> i_0 s_1_0) a2_2 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_9_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_11_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_11_0::_Tuple2 0)))::_Tuple2 1) i_0 (<{StdInt.-_7}> q_9_2 1)) a2_2) (False -> let _x_11_0 = Data.Integer.Div.subLU nh_9_1 nl_9_5 c_9_4 in Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_9_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_11_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_11_0::_Tuple2 0)) i_0 q_9_2) a2_2) ) (False -> let _x_9_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> d_3_1 nnh_7_1) m_5_1 nnl_7_2, nh_9_1::I = select _x_9_0::_Tuple2 0, nl_9_2 = select _x_9_0::_Tuple2 1, _x_9_3::I = Data.Integer.Div.addLU (<{StdInt.+_6}> nh_9_1 d_3_1) nl_9_2 m_5_1, nh_9_4::I = select _x_9_3::_Tuple2 0, q_9_5 = <{StdInt.-_7}> q_5_5 2, _x_9_6::I = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1_0) q_9_5 (<{StdInt.-_7}> s_1_0 2) a2_2 a1_1, c_9_7::I = select _x_9_6::_Tuple2 0, nl_9_8 = select _x_9_3::_Tuple2 1 in case (case (<{StdInt.==_16}> nh_9_4 0) (True -> Data.Integer.Div.ltU nl_9_8 c_9_7) (False -> False) ) (True -> StdMisc.abort "div_rem_loop 2") (False -> let _x_11_0 = Data.Integer.Div.subLU nh_9_4 nl_9_8 c_9_7 in Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_9_6::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_11_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_11_0::_Tuple2 0)) i_0 q_9_5) a2_2) ) ) (False -> let _x_7_0::I = Data.Integer.Div.subLU (<{StdInt.-_7}> r_5_4 ph_5_7) nl_5_2 pl_5_8, nh_7_1 = select _x_7_0::_Tuple2 0, nl_7_2::I = select _x_7_0::_Tuple2 1, _x_7_3::I = Data.Integer.Div.submul2 0 0 (<{StdInt.-_7}> i_0 s_1_0) q_5_5 (<{StdInt.-_7}> s_1_0 2) a2_2 a1_1, c_7_4 = select _x_7_3::_Tuple2 0 in case (case (<{StdInt.==_16}> nh_7_1 0) (True -> Data.Integer.Div.ltU nl_7_2 c_7_4) (False -> False) ) (True -> let _x_9_0 = Data.Integer.Div.subLU nh_7_1 nl_7_2 c_7_4 in Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (select (Data.Integer.Div.add_integer_array 0 0 (<{StdInt.-_7}> i_0 s_1_0) a2_2 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_7_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_9_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_9_0::_Tuple2 0)))::_Tuple2 1) i_0 (<{StdInt.-_7}> q_5_5 1)) a2_2) (False -> let _x_9_0 = Data.Integer.Div.subLU nh_7_1 nl_7_2 c_7_4 in Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> i_0 1) (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.update_13 (select _x_7_3::_Tuple2 1) (<{StdInt.-_7}> i_0 2) (select _x_9_0::_Tuple2 1)) (<{StdInt.-_7}> i_0 1) (select _x_9_0::_Tuple2 0)) i_0 q_5_5) a2_2) ) ) ) 
Data.Integer.Div.copy_array_slice_u !i_0::I !s_1::I !sa_2 !da_3 = case (<{StdInt.<_17}> i_0 s_1) (True -> let !sai_2_0::I = _SystemArray.select_11 sa_2 i_0 in Data.Integer.Div.copy_array_slice_u (<{StdInt.+_6}> i_0 1) s_1 sa_2 (_SystemArray.update_13 da_3 i_0 sai_2_0)) (False -> <{_Tuple2!3}> sa_2 da_3) 
Data.Integer.Div.shift_right_bits_a_66 !i_0::I !c_1::I !n_2::I !n32_3::I !a_4 = case (StdBool.not (<{StdInt.<_17}> i_0 0)) (True -> let !ai_2_0::I = _SystemArray.select_11 a_4 i_0 in Data.Integer.Div.shift_right_bits_a_66 (<{StdInt.-_7}> i_0 1) (<{StdInt.<<}> ai_2_0 n32_3) n_2 n32_3 (_SystemArray.update_13 a_4 i_0 (<{StdInt.+_6}> c_1 (Data.Integer.Div.ushiftr ai_2_0 n_2)))) (False -> a_4) 
Data.Integer.Div.shift_right !n_0::I !a_1 = case (<{StdInt.==_16}> n_0 0) (True -> a_1) (False -> let !s_2_0::I = _SystemArray.size_12 a_1 in Data.Integer.Div.shift_right_bits_a_66 (<{StdInt.-_7}> s_2_0 1) 0 n_0 (<{StdInt.-_7}> 32 n_0) a_1) 
Data.Integer.Div.remove_zeros_and_resize_p_49 !i_0::I !a_1 = case (<{StdInt.==_16}> i_0 0) (True -> Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) (False -> let !n_2_0::I = _SystemArray.select_11 a_1 (<{StdInt.-_7}> i_0 1) in case (<{StdInt.==_16}> n_2_0 0) (True -> Data.Integer.Div.remove_zeros_and_resize_p_49 (<{StdInt.-_7}> i_0 1) a_1) (False -> case (case (StdBool.not (<{StdInt.==_16}> i_0 1)) (True -> True) (False -> <{StdInt.<_17}> n_2_0 0) ) (True -> Data.Integer._Integer 0 (Data.Integer.Div.resize_int_array i_0 a_1)) (False -> Data.Integer._Integer n_2_0 (_SystemArray._createArray_8 0)) ) ) 
Data.Integer.Div.int_array_to_unsigned_integer !a_0 = let !s_1_0::I = _SystemArray.size_12 a_0, n_1_1::I = _SystemArray.select_11 a_0 (<{StdInt.-_7}> s_1_0 1) in case (StdBool.not (<{StdInt.==_16}> n_1_1 0)) (True -> case (case (StdBool.not (<{StdInt.==_16}> s_1_0 1)) (True -> True) (False -> <{StdInt.<_17}> n_1_1 0) ) (True -> Data.Integer._Integer 0 a_0) (False -> Data.Integer._Integer n_1_1 (_SystemArray._createArray_8 0)) ) (False -> Data.Integer.Div.remove_zeros_and_resize_p_49 (<{StdInt.-_7}> s_1_0 1) a_0) 
Data.Integer.Div.div_rem_integer_integer !a1_0 !a2_1 = case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1))) (True -> case (Data.Integer.Div.extra_int a1_0 a2_1) (True -> let !s_3_0::I = _SystemArray.size_12 a1_3_6, d_size_3_1 = _SystemArray.size_12 a2_1, n_leading_zeros_3_2 = Data.Integer.Div.n_leading_zeros_32 (_SystemArray.select_11 a2_1 (<{StdInt.-_7}> d_size_3_1 1)), _x_3_3 = Data.Integer.Div.shift_left_nd_extra_int n_leading_zeros_3_2 a1_0 a2_1, a2_3_4 = select _x_3_3::_Tuple2 1, n_3_5 = _SystemArray.size_12 a2_3_4, a1_3_6 = select _x_3_3::_Tuple2 0, a1_3_7::I = Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> s_3_0 1) a1_3_6 a2_3_4, r_3_8 = Data.Integer.Div.create_unintialized_int_array n_3_5, _x_3_9 = Data.Integer.Div.copy_array_slice_u 0 n_3_5 a1_3_7 r_3_8, a1_3_10::I = select _x_3_9::_Tuple2 0, a1_3_11::I = Data.Integer.Div.remove_begin_elements n_3_5 a1_3_10 in case (<{StdInt.==_16}> (_SystemArray.size_12 a1_3_11) 1) (True -> let !q_5_0::I = _SystemArray.select_11 a1_3_11 0 in case (StdBool.not (<{StdInt.<_17}> q_5_0 0)) (True -> <{_Tuple2!3}> (Data.Integer._Integer q_5_0 (_SystemArray._createArray_8 0)) (Data.Integer.Div.int_array_to_unsigned_integer (Data.Integer.Div.shift_right n_leading_zeros_3_2 (select _x_3_9::_Tuple2 1)))) (False -> <{_Tuple2!3}> (Data.Integer._Integer 0 a1_3_11) (Data.Integer.Div.int_array_to_unsigned_integer (Data.Integer.Div.shift_right n_leading_zeros_3_2 (select _x_3_9::_Tuple2 1)))) ) (False -> <{_Tuple2!3}> (Data.Integer._Integer 0 a1_3_11) (Data.Integer.Div.int_array_to_unsigned_integer (Data.Integer.Div.shift_right n_leading_zeros_3_2 (select _x_3_9::_Tuple2 1)))) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1)) (True -> <{_Tuple2!3}> (Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) (Data.Integer._Integer 0 (Data.Integer.Div.copy_array a1_0))) (False -> let !s_4_0::I = _SystemArray.size_12 a1_4_6, d_size_4_1 = _SystemArray.size_12 a2_1, n_leading_zeros_4_2 = Data.Integer.Div.n_leading_zeros_32 (_SystemArray.select_11 a2_1 (<{StdInt.-_7}> d_size_4_1 1)), _x_4_3 = Data.Integer.Div.shift_left_nd_no_extra_int n_leading_zeros_4_2 a1_0 a2_1, a2_4_4 = select _x_4_3::_Tuple2 1, n_4_5 = _SystemArray.size_12 a2_4_4, a1_4_6 = select _x_4_3::_Tuple2 0, a1_4_7::I = Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> s_4_0 1) a1_4_6 a2_4_4, r_4_8 = Data.Integer.Div.create_unintialized_int_array n_4_5, _x_4_9 = Data.Integer.Div.copy_array_slice_u 0 n_4_5 a1_4_7 r_4_8, a1_4_10::I = select _x_4_9::_Tuple2 0, a1_4_11::I = Data.Integer.Div.remove_begin_elements n_4_5 a1_4_10 in case (<{StdInt.==_16}> (_SystemArray.size_12 a1_4_11) 1) (True -> let !q_6_0::I = _SystemArray.select_11 a1_4_11 0 in case (StdBool.not (<{StdInt.<_17}> q_6_0 0)) (True -> <{_Tuple2!3}> (Data.Integer._Integer q_6_0 (_SystemArray._createArray_8 0)) (Data.Integer.Div.int_array_to_unsigned_integer (Data.Integer.Div.shift_right n_leading_zeros_4_2 (select _x_4_9::_Tuple2 1)))) (False -> <{_Tuple2!3}> (Data.Integer._Integer 0 a1_4_11) (Data.Integer.Div.int_array_to_unsigned_integer (Data.Integer.Div.shift_right n_leading_zeros_4_2 (select _x_4_9::_Tuple2 1)))) ) (False -> <{_Tuple2!3}> (Data.Integer._Integer 0 a1_4_11) (Data.Integer.Div.int_array_to_unsigned_integer (Data.Integer.Div.shift_right n_leading_zeros_4_2 (select _x_4_9::_Tuple2 1)))) ) ) ) (False -> <{_Tuple2!3}> (Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) (Data.Integer._Integer 0 (Data.Integer.Div.copy_array a1_0))) 
Data.Integer.Div.rem_integer !_x_0 !_x_1 = case _x_0 (Data.Integer._Integer s1_1_0 a1_1_1 -> case _x_1 (Data.Integer._Integer s2_2_0 a2_2_1 -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_1_1) 0) (True -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 0) (True -> case (case (StdBool.not (<{StdInt.==_16}> s1_1_0 -2147483648)) (True -> True) (False -> StdBool.not (<{StdInt.==_16}> s2_2_0 -1)) ) (True -> Data.Integer._Integer (StdInt.rem_28 s1_1_0 s2_2_0) (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) ) (False -> case (case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 1) (True -> case (<{StdInt.==_16}> (_SystemArray.select_11 a2_2_1 0) -2147483648) (True -> <{StdInt.==_16}> s1_1_0 -2147483648) (False -> False) ) (False -> False) ) (True -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) ) (False -> Data.Integer._Integer s1_1_0 (_SystemArray._createArray_8 0)) ) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 0) (True -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> Data.Integer.Div.make_integer_s_uint s1_1_0 (select (Data.Integer.Div.div_rem_integer_unsigned_int a1_1_1 s2_2_0)::_Tuple2 0)) (False -> StdMisc.abort "rem_integer 1") ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 1) (True -> Data.Integer.Div.make_integer_s_uint s1_1_0 (select (Data.Integer.Div.div_rem_integer_unsigned_int a1_1_1 (_SystemArray.select_11 a2_2_1 0))::_Tuple2 0)) (False -> case (StdBool.not (<{StdInt.<_17}> s1_1_0 0)) (True -> select (Data.Integer.Div.div_rem_integer_integer a1_1_1 a2_2_1)::_Tuple2 1) (False -> Data.Integer.Div.make_positive_integer_negative (select (Data.Integer.Div.div_rem_integer_integer a1_1_1 a2_2_1)::_Tuple2 1)) ) ) ) ) ) 
Data.Integer.Div.make_integer_s_a !s_0::I !a_1 = let !sa_1_0::I = _SystemArray.size_12 a_1, n_1_1::I = _SystemArray.select_11 a_1 (<{StdInt.-_7}> sa_1_0 1) in case (StdBool.not (<{StdInt.==_16}> n_1_1 0)) (True -> case (StdBool.not (<{StdInt.==_16}> sa_1_0 1)) (True -> Data.Integer._Integer s_0 a_1) (False -> case (StdBool.not (<{StdInt.<_17}> n_1_1 0)) (True -> case (StdBool.not (<{StdInt.<_17}> s_0 0)) (True -> Data.Integer._Integer n_1_1 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer (<{StdInt.~_15}> n_1_1) (_SystemArray._createArray_8 0)) ) (False -> case (case (<{StdInt.==_16}> n_1_1 -2147483648) (True -> <{StdInt.<_17}> s_0 0) (False -> False) ) (True -> Data.Integer._Integer n_1_1 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer s_0 a_1) ) ) ) 
Data.Integer.Div.div_rem_integer !_x_0 !_x_1 = case _x_0 (Data.Integer._Integer s1_1_0 a1_1_1 -> case _x_1 (Data.Integer._Integer s2_2_0 a2_2_1 -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_1_1) 0) (True -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 0) (True -> case (case (StdBool.not (<{StdInt.==_16}> s1_1_0 -2147483648)) (True -> True) (False -> StdBool.not (<{StdInt.==_16}> s2_2_0 -1)) ) (True -> let q_6_0::I = <{StdInt./_10}> s1_1_0 s2_2_0 in <{_Tuple2!3}> (Data.Integer._Integer q_6_0 (_SystemArray._createArray_8 0)) (Data.Integer._Integer (<{StdInt.-_7}> s1_1_0 (<{StdInt.*_9}> q_6_0 s2_2_0)) (_SystemArray._createArray_8 0))) (False -> <{_Tuple2!3}> (Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 -2147483648)) (Data.Integer._Integer 0 (_SystemArray._createArray_8 0))) ) (False -> case (case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 1) (True -> case (<{StdInt.==_16}> (_SystemArray.select_11 a2_2_1 0) -2147483648) (True -> <{StdInt.==_16}> s1_1_0 -2147483648) (False -> False) ) (False -> False) ) (True -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> <{_Tuple2!3}> (Data.Integer._Integer -1 (_SystemArray._createArray_8 0)) (Data.Integer._Integer 0 (_SystemArray._createArray_8 0))) (False -> <{_Tuple2!3}> (Data.Integer._Integer 1 (_SystemArray._createArray_8 0)) (Data.Integer._Integer 0 (_SystemArray._createArray_8 0))) ) (False -> <{_Tuple2!3}> (Data.Integer._Integer 0 (_SystemArray._createArray_8 0)) (Data.Integer._Integer s1_1_0 (_SystemArray._createArray_8 0))) ) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 0) (True -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> let _x_6_0 = Data.Integer.Div.div_rem_integer_unsigned_int a1_1_1 s2_2_0 in <{_Tuple2!3}> (Data.Integer.Div.make_integer_s_a s1_1_0 (select _x_6_0::_Tuple2 1)) (Data.Integer.Div.make_integer_s_uint s1_1_0 (select _x_6_0::_Tuple2 0))) (False -> let _x_6_0 = Data.Integer.Div.div_rem_integer_unsigned_int a1_1_1 (<{StdInt.~_15}> s2_2_0) in <{_Tuple2!3}> (Data.Integer.Div.make_integer_s_a (StdInt.bitnot s1_1_0) (select _x_6_0::_Tuple2 1)) (Data.Integer.Div.make_integer_s_uint s1_1_0 (select _x_6_0::_Tuple2 0))) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_2_1) 1) (True -> let !s_6_0::I = StdInt.bitxor s1_1_0 s2_2_0, _x_6_1 = Data.Integer.Div.div_rem_integer_unsigned_int a1_1_1 (_SystemArray.select_11 a2_2_1 0) in <{_Tuple2!3}> (Data.Integer.Div.make_integer_s_a s_6_0 (select _x_6_1::_Tuple2 1)) (Data.Integer.Div.make_integer_s_uint s1_1_0 (select _x_6_1::_Tuple2 0))) (False -> case (StdBool.not (<{StdInt.<_17}> s1_1_0 0)) (True -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> Data.Integer.Div.div_rem_integer_integer a1_1_1 a2_2_1) (False -> let _x_8_0 = Data.Integer.Div.div_rem_integer_integer a1_1_1 a2_2_1 in <{_Tuple2!3}> (Data.Integer.Div.make_positive_integer_negative (select _x_8_0::_Tuple2 0)) (select _x_8_0::_Tuple2 1)) ) (False -> case (StdBool.not (<{StdInt.<_17}> s2_2_0 0)) (True -> let _x_8_0 = Data.Integer.Div.div_rem_integer_integer a1_1_1 a2_2_1 in <{_Tuple2!3}> (select _x_8_0::_Tuple2 0) (Data.Integer.Div.make_positive_integer_negative (select _x_8_0::_Tuple2 1))) (False -> let _x_8_0 = Data.Integer.Div.div_rem_integer_integer a1_1_1 a2_2_1 in <{_Tuple2!3}> (Data.Integer.Div.make_positive_integer_negative (select _x_8_0::_Tuple2 0)) (Data.Integer.Div.make_positive_integer_negative (select _x_8_0::_Tuple2 1))) ) ) ) ) ) ) 
Data.Integer.Div.floordiv_integer !a_0 !b_1 = case (StdBool.not (<{StdInt.<_17}> (StdInt.bitxor (select a_0::Data.Integer._Integer 0) (select b_1::Data.Integer._Integer 0)) 0)) (True -> Data.Integer.Div.div_integer a_0 b_1) (False -> let _x_2_0 = Data.Integer.Div.div_rem_integer a_0 b_1, r_2_1 = select _x_2_0::_Tuple2 1 in case (case (<{StdInt.==_16}> (select r_2_1::Data.Integer._Integer 0) 0) (True -> <{StdInt.==_16}> (_SystemArray.size_12 (select r_2_1::Data.Integer._Integer 1)) 0) (False -> False) ) (True -> select _x_2_0::_Tuple2 0) (False -> Data.Integer.Add.sub_integer (select _x_2_0::_Tuple2 0) (Data.Integer._Integer 1 (_SystemArray._createArray_8 0))) ) 
Data.Integer.Div.mod_integer !a_0 !b_1 = case (StdBool.not (<{StdInt.<_17}> (StdInt.bitxor (select a_0::Data.Integer._Integer 0) (select b_1::Data.Integer._Integer 0)) 0)) (True -> Data.Integer.Div.rem_integer a_0 b_1) (False -> let r_2_0 = Data.Integer.Div.rem_integer a_0 b_1 in case (case (<{StdInt.==_16}> (select r_2_0::Data.Integer._Integer 0) 0) (True -> <{StdInt.==_16}> (_SystemArray.size_12 (select r_2_0::Data.Integer._Integer 1)) 0) (False -> False) ) (True -> r_2_0) (False -> Data.Integer.Add.add_integer r_2_0 b_1) ) 
Data.Integer.Div.floordiv_mod_integer !a_0 !b_1 = case (StdBool.not (<{StdInt.<_17}> (StdInt.bitxor (select a_0::Data.Integer._Integer 0) (select b_1::Data.Integer._Integer 0)) 0)) (True -> Data.Integer.Div.div_rem_integer a_0 b_1) (False -> let _x_2_0 = Data.Integer.Div.div_rem_integer a_0 b_1, r_2_1 = select _x_2_0::_Tuple2 1 in case (case (<{StdInt.==_16}> (select r_2_1::Data.Integer._Integer 0) 0) (True -> <{StdInt.==_16}> (_SystemArray.size_12 (select r_2_1::Data.Integer._Integer 1)) 0) (False -> False) ) (True -> <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) r_2_1) (False -> <{_Tuple2!3}> (Data.Integer.Add.sub_integer (select _x_2_0::_Tuple2 0) (Data.Integer._Integer 1 (_SystemArray._createArray_8 0))) (Data.Integer.Add.add_integer r_2_1 b_1)) ) 
Data.Integer.Div.shift_left_2_0_58 !_vArray_0 a_1 = let !s_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a_1, !i1_1_1 = select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (<{StdInt.-_7}> s_1_0 1), !i0_1_2 = select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (<{StdInt.-_7}> s_1_0 2) in _Tuple2 i1_1_1 i0_1_2
Data.Integer.Div.shift_left_3x_0_59 !_vArray_0 a_1 = let !s_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 a_1, !i2_1_1 = select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (<{StdInt.-_7}> s_1_0 1), !i1_1_2 = select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (<{StdInt.-_7}> s_1_0 2) in _Tuple3 0 i2_1_1 i1_1_2
Data.Integer.Div.shift_left_2_0_90 !a_0 = let !s_1_0::I = _SystemArray.size_12 a_0, !i1_1_1::I = _SystemArray.select_11 a_0 (<{StdInt.-_7}> s_1_0 1), !i0_1_2::I = _SystemArray.select_11 a_0 (<{StdInt.-_7}> s_1_0 2) in _Tuple2 i1_1_1 i0_1_2
Data.Integer.Div.shift_left_3x_0_91 !a_0 = let !s_1_0::I = _SystemArray.size_12 a_0, !i2_1_1::I = _SystemArray.select_11 a_0 (<{StdInt.-_7}> s_1_0 1), !i1_1_2::I = _SystemArray.select_11 a_0 (<{StdInt.-_7}> s_1_0 2) in _Tuple3 0 i2_1_1 i1_1_2
Data.Integer.Div.div_integer_1_extra_int_56 !a1_0 !a2_1 = let _x_1_0 = Data.Integer.Div.shift_left_3x_0_91 a1_0, n2_1_1::I = select _x_1_0::_Tuple3 0, n1_1_2::I = select _x_1_0::_Tuple3 1, n0_1_3 = select _x_1_0::_Tuple3 2, _x_1_4::I = Data.Integer.Div.shift_left_2_0_90 a2_1, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> _SystemArray.update_13 (_SystemArray._createArray_8 1) 0 (select _x_1_7::_Tuple2 1)) (False -> let !s_3_0::I = _SystemArray.size_12 a1_3_3, !n_3_1::I = _SystemArray.size_12 a2_3_4, _x_3_2 = Data.Integer.Div.shift_left_nd_extra_int_0 a1_0 a2_1, a1_3_3 = select _x_3_2::_Tuple2 0, a2_3_4 = select _x_3_2::_Tuple2 1 in Data.Integer.Div.remove_begin_elements n_3_1 (Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_3_3 a2_3_4)) 
Data.Integer.Div.div_integer_1_no_extra_int_57 !a1_0 !a2_1 = let !s_1_0::I = _SystemArray.size_12 a1_0, !n2_1_1::I = _SystemArray.select_11 a1_0 (<{StdInt.-_7}> s_1_0 1), !n1_1_2::I = _SystemArray.select_11 a1_0 (<{StdInt.-_7}> s_1_0 2), !n0_1_3::I = _SystemArray.select_11 a1_0 (<{StdInt.-_7}> s_1_0 3), _x_1_4 = Data.Integer.Div.shift_left_2_0_90 a2_1, d1_1_5::I = select _x_1_4::_Tuple2 0, d0_1_6::I = select _x_1_4::_Tuple2 1, _x_1_7 = Data.Integer.Div.try_fast_div_1 n2_1_1 n1_1_2 n0_1_3 d1_1_5 d0_1_6 in case (select _x_1_7::_Tuple2 0) (True -> _SystemArray.update_13 (_SystemArray._createArray_8 1) 0 (select _x_1_7::_Tuple2 1)) (False -> let !s_3_0::I = _SystemArray.size_12 a1_0, !n_3_1::I = _SystemArray.size_12 a2_1 in Data.Integer.Div.remove_begin_elements n_3_1 (Data.Integer.Div.div_last (<{StdInt.-_7}> s_3_0 1) n_3_1 a1_0 a2_1)) 
Data.Integer.Div.div_integer_a !a1_0 !a2_1 = case (<{StdInt.<_17}> 0 (_SystemArray.size_12 a1_0)) (True -> case (<{StdInt.<_17}> 1 (_SystemArray.size_12 a2_1)) (True -> case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1))) (True -> case (Data.Integer.Div.extra_int a1_0 a2_1) (True -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1)) (True -> Data.Integer.Div.div_integer_1_extra_int_56 a1_0 a2_1) (False -> let !s_6_0::I = _SystemArray.size_12 a1_6_3, _x_6_1 = Data.Integer.Div.shift_left_nd_extra_int 0 a1_0 a2_1, a2_6_2 = select _x_6_1::_Tuple2 1, a1_6_3 = select _x_6_1::_Tuple2 0 in Data.Integer.Div.remove_begin_elements (_SystemArray.size_12 a2_6_2) (Data.Integer.Div.div_loop (<{StdInt.-_7}> s_6_0 1) a1_6_3 a2_6_2)) ) (False -> let !n_5_0::I = <{StdInt.-_7}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1) in case (StdBool.not (<{StdInt.<_17}> 1 n_5_0)) (True -> case (<{StdInt.==_16}> n_5_0 0) (True -> _SystemArray._createArray_8 0) (False -> Data.Integer.Div.div_integer_1_no_extra_int_57 a1_0 a2_1) ) (False -> let !s_7_0::I = _SystemArray.size_12 a1_0 in Data.Integer.Div.remove_begin_elements (_SystemArray.size_12 a2_1) (Data.Integer.Div.div_loop (<{StdInt.-_7}> s_7_0 1) a1_0 a2_1)) ) ) (False -> _SystemArray._createArray_8 0) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_1) 1) (True -> select (Data.Integer.Div.div_rem_integer_unsigned_int a1_0 (_SystemArray.select_11 a2_1 0))::_Tuple2 1) (False -> StdMisc.abort "div_integer_a 2") ) ) 
Data.Integer.Div.div_rem_integer_a !a1_0 !a2_1 = case (<{StdInt.<_17}> 0 (_SystemArray.size_12 a1_0)) (True -> case (<{StdInt.<_17}> 1 (_SystemArray.size_12 a2_1)) (True -> case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1))) (True -> case (Data.Integer.Div.extra_int a1_0 a2_1) (True -> case (<{StdInt.==_16}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1)) (True -> StdMisc.abort "div_rem_integer_a 1") (False -> let !s_6_0::I = _SystemArray.size_12 a1_6_4, _x_6_1 = Data.Integer.Div.shift_left_nd_extra_int_0 a1_0 a2_1, a2_6_2 = select _x_6_1::_Tuple2 1, n_6_3::I = _SystemArray.size_12 a2_6_2, a1_6_4 = select _x_6_1::_Tuple2 0, _x_6_5 = Data.Integer.Div.copy_array_slice_u 0 n_6_3 (Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> s_6_0 1) a1_6_4 a2_6_2) (Data.Integer.Div.create_unintialized_int_array n_6_3) in <{_Tuple2!3}> (Data.Integer.Div.remove_begin_elements n_6_3 (select _x_6_5::_Tuple2 0)) (Data.Integer.Div.int_array_to_unsigned_integer (select _x_6_5::_Tuple2 1))) ) (False -> let n_5_0::I = <{StdInt.-_7}> (_SystemArray.size_12 a1_0) (_SystemArray.size_12 a2_1) in case (StdBool.not (<{StdInt.<_17}> 1 n_5_0)) (True -> case (<{StdInt.==_16}> n_5_0 0) (True -> <{_Tuple2!3}> (_SystemArray._createArray_8 0) (Data.Integer._Integer 0 (Data.Integer.Div.copy_array a1_0))) (False -> StdMisc.abort "div_rem_integer_a 1") ) (False -> let !s_7_0::I = _SystemArray.size_12 a1_0, n_7_1 = _SystemArray.size_12 a2_1, _x_7_2::I = Data.Integer.Div.copy_array_slice_u 0 n_7_1 (Data.Integer.Div.div_rem_loop (<{StdInt.-_7}> s_7_0 1) a1_0 a2_1) (Data.Integer.Div.create_unintialized_int_array n_7_1) in <{_Tuple2!3}> (Data.Integer.Div.remove_begin_elements n_7_1 (select _x_7_2::_Tuple2 0)) (Data.Integer.Div.int_array_to_unsigned_integer (select _x_7_2::_Tuple2 1))) ) ) (False -> <{_Tuple2!3}> (_SystemArray._createArray_8 0) (Data.Integer._Integer 0 (Data.Integer.Div.copy_array a1_0))) ) (False -> case (<{StdInt.==_16}> (_SystemArray.size_12 a2_1) 1) (True -> let _x_4_0 = Data.Integer.Div.div_rem_integer_unsigned_int a1_0 (_SystemArray.select_11 a2_1 0) in <{_Tuple2!3}> (select _x_4_0::_Tuple2 1) (Data.Integer.Div.unsigned_int_to_integer (select _x_4_0::_Tuple2 0))) (False -> StdMisc.abort "div_rem_integer_a 1") ) ) (False -> StdMisc.abort "div_rem_integer_a 2") 


|| Converted Records
