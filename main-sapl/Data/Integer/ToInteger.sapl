|| ?module? Data.Integer.ToInteger


Data.Integer.ToInteger.convert9c::I !i_0::I !s_1 = <{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 i_0)) 48) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 1))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 2))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 3))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 4))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 5))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 6))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 7))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 8))) 48)
Data.Integer.ToInteger.convertchars::I !i_0::I !end_i_1::I !n_2::I !s_3 = case (<{StdInt.<_17}> i_0 end_i_1) (True -> Data.Integer.ToInteger.convertchars (<{StdInt.+_6}> i_0 1) end_i_1 (<{StdInt.+_6}> (<{StdInt.*_9}> n_2 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_3 i_0)) 48)) s_3) (False -> n_2) 
Data.Integer.ToInteger.mulud !a_0::I !b_1::I = error "no AnyCodeExpr"
Data.Integer.ToInteger.addLU !_x_0::I !_x_1::I !_x_2::I = error "no AnyCodeExpr"
Data.Integer.ToInteger.convert10to13c !i_f_s_0::I !i_l_s_1::I !s_2 = let i_1_0 = <{StdInt.-_7}> i_l_s_1 9, _x_1_1::I = Data.Integer.ToInteger.mulud (Data.Integer.ToInteger.convertchars i_f_s_0 i_1_0 0 s_2) 1000000000 in Data.Integer.ToInteger.addLU (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1) (Data.Integer.ToInteger.convert9c i_1_0 s_2)
Data.Integer.ToInteger.ushiftr::I !a_0::I !b_1::I = error "no AnyCodeExpr"
Data.Integer.ToInteger.convert18c_64::I !i_0::I !s_1 = let t48_1_0::I = 48, n_1_1::I = <{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 i_0)) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 9)))) t48_1_0) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 1))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 10)))) t48_1_0)) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 2))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 11)))) t48_1_0)) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 3))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 12)))) t48_1_0)) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 4))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 13)))) t48_1_0)) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 5))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 14)))) t48_1_0)) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 6))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 15)))) t48_1_0)) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 7))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 16)))) t48_1_0)) 10) (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 8))) 32) (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 17)))) t48_1_0) in <{StdInt.+_6}> (<{StdInt.*_9}> (Data.Integer.ToInteger.ushiftr n_1_1 32) 1000000000) (StdInt.bitand n_1_1 -1)
Data.Integer.ToInteger.convert19to27c_64 !i_f_s_0::I !i_l_s_1::I !s_2 = let i_1_0 = <{StdInt.-_7}> i_l_s_1 18, _x_1_1::I = Data.Integer.ToInteger.mulud (Data.Integer.ToInteger.convertchars i_f_s_0 i_1_0 0 s_2) -1486618624 in Data.Integer.ToInteger.addLU (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1) (Data.Integer.ToInteger.convert18c_64 i_1_0 s_2)
Data.Integer.ToInteger.convert_first_chars_21 !n_chars_in_first_part_0::I !i_a_f_1::I !a_2 !i_s_3::I !s_4 = case (<{StdInt.==_16}> n_chars_in_first_part_0 0) (True -> <{_Tuple2!3}> i_a_f_1 a_2) (False -> case (<{StdInt.<_17}> n_chars_in_first_part_0 10) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> i_a_f_1 1) (_SystemArray.update_13 a_2 i_a_f_1 (StdInt.toInt_23 (<{StdString.%_10}> s_4 (_Tuple2 i_s_3 (<{StdInt.-_7}> (<{StdInt.+_6}> i_s_3 n_chars_in_first_part_0) 1)))))) (False -> let _x_3_0::I = Data.Integer.ToInteger.convert10to13c i_s_3 (<{StdInt.+_6}> i_s_3 n_chars_in_first_part_0) s_4, h_3_1 = select _x_3_0::_Tuple2 0 in case (<{StdInt.==_16}> h_3_1 0) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> i_a_f_1 1) (_SystemArray.update_13 a_2 i_a_f_1 (select _x_3_0::_Tuple2 1))) (False -> <{_Tuple2!3}> (<{StdInt.+_6}> i_a_f_1 2) (_SystemArray.update_13 (_SystemArray.update_13 a_2 i_a_f_1 (select _x_3_0::_Tuple2 1)) (<{StdInt.+_6}> i_a_f_1 1) h_3_1)) ) ) 
Data.Integer.ToInteger.convert13c_32 !i_0::I !s_1 = let _x_1_0 = Data.Integer.ToInteger.mulud (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 i_0)) 48) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 1))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 2))) 48)) 10) (<{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 3))) 48)) 1000000000 in Data.Integer.ToInteger.addLU (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1) (Data.Integer.ToInteger.convert9c (<{StdInt.+_6}> i_0 4) s_1)
Data.Integer.ToInteger.convert27c_64 !i_0::I !s_1 = let _x_1_0 = Data.Integer.ToInteger.mulud (Data.Integer.ToInteger.convert9c i_0 s_1) -1486618624 in Data.Integer.ToInteger.addLU (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1) (Data.Integer.ToInteger.convert18c_64 (<{StdInt.+_6}> i_0 9) s_1)
Data.Integer.ToInteger.mul_5pd_add !i_0::I !i_a_1::I !a_2 !n_3::I = case (<{StdInt.==_16}> i_0 i_a_1) (True -> case (StdBool.not (<{StdInt.==_16}> n_3 0)) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> i_0 1) (_SystemArray.update_13 a_2 i_0 n_3)) (False -> <{_Tuple2!3}> i_0 a_2) ) (False -> let _x_2_0 = _SystemArray.uselect_14 a_2 i_0, _x_2_1 = Data.Integer.ToInteger.mulud (select _x_2_0::_Tuple2 0) 1220703125, _x_2_2 = Data.Integer.ToInteger.addLU (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1) n_3 in Data.Integer.ToInteger.mul_5pd_add (<{StdInt.+_6}> i_0 1) i_a_1 (_SystemArray.update_13 (select _x_2_0::_Tuple2 1) i_0 (select _x_2_2::_Tuple2 1)) (select _x_2_2::_Tuple2 0)) 
Data.Integer.ToInteger.ltU::B !a_0::I !b_1::I = error "no AnyCodeExpr"
Data.Integer.ToInteger.add_carry !i_0::I !i_a_1::I !a_2 = case (<{StdInt.<_17}> i_0 i_a_1) (True -> let _x_2_0::I = _SystemArray.uselect_14 a_2 i_0, ai_2_1::I = select _x_2_0::_Tuple2 0, ai_2_2 = <{StdInt.+_6}> ai_2_1 1 in case (StdBool.not (<{StdInt.==_16}> ai_2_2 0)) (True -> <{_Tuple2!3}> i_a_1 (_SystemArray.update_13 (select _x_2_0::_Tuple2 1) i_0 ai_2_2)) (False -> Data.Integer.ToInteger.add_carry (<{StdInt.+_6}> i_0 1) i_a_1 (_SystemArray.update_13 (select _x_2_0::_Tuple2 1) i_0 ai_2_2)) ) (False -> <{_Tuple2!3}> (<{StdInt.+_6}> i_a_1 1) (_SystemArray.update_13 a_2 i_0 1)) 
Data.Integer.ToInteger.addi !n_0::I !i_a_f_1::I !i_a_e_2::I !a_3 = case (<{StdInt.==_16}> i_a_f_1 i_a_e_2) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> i_a_f_1 1) (_SystemArray.update_13 a_3 i_a_f_1 n_0)) (False -> let _x_2_0::I = _SystemArray.uselect_14 a_3 i_a_f_1, ai_2_1::I = select _x_2_0::_Tuple2 0, s_2_2 = <{StdInt.+_6}> ai_2_1 n_0 in case (Data.Integer.ToInteger.ltU s_2_2 n_0) (True -> Data.Integer.ToInteger.add_carry (<{StdInt.+_6}> i_a_f_1 1) i_a_e_2 (_SystemArray.update_13 (select _x_2_0::_Tuple2 1) i_a_f_1 s_2_2)) (False -> <{_Tuple2!3}> i_a_e_2 (_SystemArray.update_13 (select _x_2_0::_Tuple2 1) i_a_f_1 s_2_2)) ) 
Data.Integer.ToInteger.insert_at_begin_22 !n_0::I !i_a_f_1::I !a_2 = case (StdBool.not (<{StdInt.<_17}> 0 i_a_f_1)) (True -> StdMisc.abort "insert_at_begin") (False -> let i_a_f_2_0::I = <{StdInt.-_7}> i_a_f_1 1 in <{_Tuple2!3}> i_a_f_2_0 (_SystemArray.update_13 a_2 i_a_f_2_0 n_0)) 
Data.Integer.ToInteger.shift_left !i_0::I !n_1::I !shift_2::I !i_a_3::I !a_4 = case (<{StdInt.<_17}> i_0 i_a_3) (True -> let _x_2_0::I = _SystemArray.uselect_14 a_4 i_0, ai_2_1 = select _x_2_0::_Tuple2 0 in Data.Integer.ToInteger.shift_left (<{StdInt.+_6}> i_0 1) (Data.Integer.ToInteger.ushiftr ai_2_1 (<{StdInt.-_7}> 32 shift_2)) shift_2 i_a_3 (_SystemArray.update_13 (select _x_2_0::_Tuple2 1) i_0 (<{StdInt.+_6}> (<{StdInt.<<}> ai_2_1 shift_2) n_1))) (False -> case (<{StdInt.==_16}> n_1 0) (True -> <{_Tuple2!3}> i_a_3 a_4) (False -> <{_Tuple2!3}> (<{StdInt.+_6}> i_a_3 1) (_SystemArray.update_13 a_4 i_a_3 n_1)) ) 
Data.Integer.ToInteger.stoi_next_part_no_shift !i_s_0::I !s_1 !i_a_f_2::I !i_a_e_3::I !shift_4::I !r_5::I !a_6 = case (<{StdInt.<_17}> i_s_0 (_SystemArray.size_20 s_1)) (True -> case (<{StdInt.<_17}> shift_4 19) (True -> let _x_3_0 = Data.Integer.ToInteger.mulud r_5 1220703125, _x_3_1 = Data.Integer.ToInteger.convert13c_32 i_s_0 s_1, l_3_2::I = select _x_3_1::_Tuple2 1, _x_3_3 = Data.Integer.ToInteger.addLU (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1) (<{StdInt.+_6}> (Data.Integer.ToInteger.ushiftr l_3_2 13) (<{StdInt.<<}> (select _x_3_1::_Tuple2 0) 19)), rl_3_4::I = select _x_3_3::_Tuple2 1, _x_3_5 = Data.Integer.ToInteger.mul_5pd_add i_a_f_2 i_a_e_3 a_6 0, _x_3_6 = Data.Integer.ToInteger.addi (<{StdInt.+_6}> (Data.Integer.ToInteger.ushiftr rl_3_4 shift_4) (<{StdInt.<<}> (select _x_3_3::_Tuple2 0) (<{StdInt.-_7}> 32 shift_4))) i_a_f_2 (select _x_3_5::_Tuple2 0) (select _x_3_5::_Tuple2 1) in Data.Integer.ToInteger.stoi_next_part_no_shift (<{StdInt.+_6}> i_s_0 13) s_1 i_a_f_2 (select _x_3_6::_Tuple2 0) (<{StdInt.+_6}> shift_4 13) (StdInt.bitor (StdInt.bitand l_3_2 8191) (<{StdInt.<<}> (StdInt.bitand rl_3_4 (<{StdInt.-_7}> (<{StdInt.<<}> 1 shift_4) 1)) 13)) (select _x_3_6::_Tuple2 1)) (False -> case (<{StdInt.==_16}> shift_4 19) (True -> let _x_4_0 = Data.Integer.ToInteger.mulud r_5 1220703125, yl_4_1 = select _x_4_0::_Tuple2 1, _x_4_2 = Data.Integer.ToInteger.convert13c_32 i_s_0 s_1, _x_4_3 = Data.Integer.ToInteger.addLU (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (select _x_4_0::_Tuple2 0) 13) (Data.Integer.ToInteger.ushiftr yl_4_1 19)) (select _x_4_2::_Tuple2 0)) (<{StdInt.<<}> yl_4_1 13) (select _x_4_2::_Tuple2 1), _x_4_4 = Data.Integer.ToInteger.mul_5pd_add i_a_f_2 i_a_e_3 a_6 0, _x_4_5::I = Data.Integer.ToInteger.addi (select _x_4_3::_Tuple2 0) i_a_f_2 (select _x_4_4::_Tuple2 0) (select _x_4_4::_Tuple2 1), _x_4_6 = Data.Integer.ToInteger.insert_at_begin_22 (select _x_4_3::_Tuple2 1) i_a_f_2 (select _x_4_5::_Tuple2 1) in Data.Integer.ToInteger.stoi_next_part_no_shift (<{StdInt.+_6}> i_s_0 13) s_1 (select _x_4_6::_Tuple2 0) (select _x_4_5::_Tuple2 0) 0 0 (select _x_4_6::_Tuple2 1)) (False -> let _x_4_0 = Data.Integer.ToInteger.mulud r_5 1220703125, n_4_1 = <{StdInt.-_7}> shift_4 19, ys_4_2 = <{StdInt.-_7}> 13 n_4_1, yl_4_3 = select _x_4_0::_Tuple2 1, _x_4_4::I = Data.Integer.ToInteger.convert13c_32 i_s_0 s_1, h_4_5::I = select _x_4_4::_Tuple2 0, l_4_6 = select _x_4_4::_Tuple2 1, _x_4_7::I = Data.Integer.ToInteger.addLU (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (select _x_4_0::_Tuple2 0) ys_4_2) (Data.Integer.ToInteger.ushiftr yl_4_3 (<{StdInt.-_7}> 32 ys_4_2))) (Data.Integer.ToInteger.ushiftr h_4_5 n_4_1)) (<{StdInt.<<}> yl_4_3 ys_4_2) (<{StdInt.+_6}> (Data.Integer.ToInteger.ushiftr l_4_6 n_4_1) (<{StdInt.<<}> h_4_5 (<{StdInt.-_7}> 32 n_4_1))), _x_4_8::I = Data.Integer.ToInteger.mul_5pd_add i_a_f_2 i_a_e_3 a_6 0, _x_4_9::I = Data.Integer.ToInteger.addi (select _x_4_7::_Tuple2 0) i_a_f_2 (select _x_4_8::_Tuple2 0) (select _x_4_8::_Tuple2 1), _x_4_10 = Data.Integer.ToInteger.insert_at_begin_22 (select _x_4_7::_Tuple2 1) i_a_f_2 (select _x_4_9::_Tuple2 1) in Data.Integer.ToInteger.stoi_next_part_no_shift (<{StdInt.+_6}> i_s_0 13) s_1 (select _x_4_10::_Tuple2 0) (select _x_4_9::_Tuple2 0) n_4_1 (StdInt.bitand l_4_6 (<{StdInt.-_7}> (<{StdInt.<<}> 1 n_4_1) 1)) (select _x_4_10::_Tuple2 1)) ) ) (False -> case (case (<{StdInt.==_16}> i_s_0 (_SystemArray.size_20 s_1)) (True -> case (<{StdInt.==_16}> i_a_f_2 0) (True -> StdBool.not (<{StdInt.<_17}> (_SystemArray.size_12 a_6) i_a_e_3)) (False -> False) ) (False -> False) ) (True -> case (<{StdInt.==_16}> shift_4 0) (True -> a_6) (False -> select (Data.Integer.ToInteger.shift_left 0 r_5 shift_4 i_a_e_3 a_6)::_Tuple2 1) ) ) 
<{Data.Integer.ToInteger.cu;314;40_23}> !_vArray_0 !_vArray_1 a_2 c_a_3 !c_i_4::I !g_s_5::I = case (StdBool.not (<{StdInt.<_17}> g_s_5 c_i_4)) (True -> <{Data.Integer.ToInteger.cu;314;40_23}> _vArray_0 _vArray_1 a_2 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_3 c_i_4 (select _vArray_0::<{_SystemArray.Array;}> 3 a_2 c_i_4)) (<{StdInt.+_6}> c_i_4 StdInt.one_11) g_s_5) (False -> c_a_3) 
<{Data.Integer.ToInteger.cu;314;40_39}> !_vArray_0 a_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{Data.Integer.ToInteger.cu;314;40_39}> _vArray_0 a_1 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (_SystemArray.select_11 a_1 c_i_3)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
<{Data.Integer.ToInteger.cu;314;40_40}> a_0 !c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{Data.Integer.ToInteger.cu;314;40_40}> a_0 (_SystemArray.update_13 c_a_1 c_i_2 (_SystemArray.select_11 a_0 c_i_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
Data.Integer.ToInteger.remove_trailing_zeros0 !i_0::I !a_1 = case (case (<{StdInt.==_16}> i_0 0) (True -> StdBool.not (<{StdInt.<_17}> (_SystemArray.select_11 a_1 0) 0)) (False -> False) ) (True -> Data.Integer._Integer (_SystemArray.select_11 a_1 0) (_SystemArray._createArray_8 0)) (False -> case (<{StdInt.==_16}> (_SystemArray.select_11 a_1 i_0) 0) (True -> Data.Integer.ToInteger.remove_trailing_zeros0 (<{StdInt.-_7}> i_0 1) a_1) (False -> case (<{StdInt.==_16}> (<{StdInt.+_6}> i_0 1) (_SystemArray.size_12 a_1)) (True -> Data.Integer._Integer 0 a_1) (False -> Data.Integer._Integer 0 (<{Data.Integer.ToInteger.cu;314;40_40}> a_1 (_SystemArray._createArray_8 (<{StdInt.+_6}> i_0 StdInt.one_11)) 0 i_0)) ) ) 
Data.Integer.ToInteger.string_to_integer2 !i_s_0::I !s_1 = let n_chars_1_0 = <{StdInt.-_7}> (_SystemArray.size_20 s_1) i_s_0, n_parts_1_1::I = <{StdInt./_10}> n_chars_1_0 13, n_chars_in_parts_1_2::I = <{StdInt.*_9}> n_parts_1_1 13, n_shifts_1_3::I = <{StdInt.>>}> n_chars_in_parts_1_2 5, size_a_1_4::I = <{StdInt.+_6}> (<{StdInt.+_6}> n_parts_1_1 3) n_shifts_1_3, n_chars_in_first_part_1_5::I = <{StdInt.-_7}> n_chars_1_0 n_chars_in_parts_1_2, _x_1_6::I = Data.Integer.ToInteger.convert_first_chars_21 n_chars_in_first_part_1_5 n_shifts_1_3 (_SystemArray.createArray_9 size_a_1_4 0) i_s_0 s_1 in Data.Integer.ToInteger.remove_trailing_zeros0 (<{StdInt.-_7}> size_a_1_4 1) (Data.Integer.ToInteger.stoi_next_part_no_shift (<{StdInt.+_6}> i_s_0 n_chars_in_first_part_1_5) s_1 n_shifts_1_3 (select _x_1_6::_Tuple2 0) 0 0 (select _x_1_6::_Tuple2 1))
Data.Integer.ToInteger.string_to_integer !s_0 = case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 0) '-') (True -> case (StdBool.not (<{StdInt.<_17}> 14 (_SystemArray.size_20 s_0))) (True -> case (<{StdInt.<_17}> (_SystemArray.size_20 s_0) 11) (True -> Data.Integer._Integer (StdInt.toInt_23 s_0) (_SystemArray._createArray_8 0)) (False -> let _x_4_0::I = Data.Integer.ToInteger.convert10to13c 1 (_SystemArray.size_20 s_0) s_0, h_4_1 = select _x_4_0::_Tuple2 0 in case (<{StdInt.==_16}> h_4_1 0) (True -> let l_6_0::I = select _x_4_0::_Tuple2 1, ml_6_1::I = <{StdInt.~_15}> l_6_0 in case (<{StdInt.<_17}> ml_6_1 0) (True -> Data.Integer._Integer ml_6_1 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer -1 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 l_6_0)) ) (False -> Data.Integer._Integer -1 (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray._createArray_8 2) 1 h_4_1) 0 (select _x_4_0::_Tuple2 1))) ) ) (False -> update (Data.Integer.ToInteger.string_to_integer2 1 s_0)::Data.Integer._Integer [0:-1]) ) (False -> case (StdBool.not (<{StdInt.<_17}> 13 (_SystemArray.size_20 s_0))) (True -> case (<{StdInt.<_17}> (_SystemArray.size_20 s_0) 10) (True -> Data.Integer._Integer (StdInt.toInt_23 s_0) (_SystemArray._createArray_8 0)) (False -> let _x_4_0::I = Data.Integer.ToInteger.convert10to13c 0 (_SystemArray.size_20 s_0) s_0, h_4_1 = select _x_4_0::_Tuple2 0 in case (<{StdInt.==_16}> h_4_1 0) (True -> let l_6_0::I = select _x_4_0::_Tuple2 1 in case (StdBool.not (<{StdInt.<_17}> l_6_0 0)) (True -> Data.Integer._Integer l_6_0 (_SystemArray._createArray_8 0)) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray._createArray_8 1) 0 l_6_0)) ) (False -> Data.Integer._Integer 0 (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray._createArray_8 2) 1 h_4_1) 0 (select _x_4_0::_Tuple2 1))) ) ) (False -> Data.Integer.ToInteger.string_to_integer2 0 s_0) ) 
Data.Integer.ToInteger.divdu !a_0::I !b_1::I !c_2::I = error "no AnyCodeExpr"
Data.Integer.ToInteger.remove_trailing_zeros !b_0::I !i_1::I !a_2 = case (case (StdBool.not (<{StdInt.<_17}> i_1 b_0)) (True -> <{StdInt.==_16}> (_SystemArray.select_11 a_2 i_1) 0) (False -> False) ) (True -> Data.Integer.ToInteger.remove_trailing_zeros b_0 (<{StdInt.-_7}> i_1 1) a_2) (False -> <{_Tuple2!3}> i_1 a_2) 


|| Converted Records
