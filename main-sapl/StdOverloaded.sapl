|| ?module? StdOverloaded


<{StdOverloaded.TD;+;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;-;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;zero;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;*;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;/;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;one;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;==;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;<;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;isEven;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;isOdd;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;length;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;%;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;+++;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;^;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;abs;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;sign;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;~;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;mod;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;rem;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;gcd;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;lcm;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;toInt;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;toChar;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;toBool;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;toReal;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;toString;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;fromInt;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;fromChar;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;fromBool;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;fromReal;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;fromString;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;ln;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;log10;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;exp;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;sqrt;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;sin;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;cos;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;tan;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;asin;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;acos;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;atan;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;sinh;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;cosh;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;tanh;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;asinh;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;acosh;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;atanh;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;inc;}> _x_0::B = _predefined._Nil
<{StdOverloaded.TD;dec;}> _x_0::B = _predefined._Nil


|| Converted Records
:: <{StdOverloaded.+;}> = {!<{StdOverloaded.+}>}

:: <{StdOverloaded.-;}> = {!<{StdOverloaded.-}>}

:: <{StdOverloaded.zero;}> = {!StdOverloaded.zero}

:: <{StdOverloaded.*;}> = {!<{StdOverloaded.*}>}

:: <{StdOverloaded./;}> = {!<{StdOverloaded./}>}

:: <{StdOverloaded.one;}> = {!StdOverloaded.one}

:: <{StdOverloaded.==;}> = {!<{StdOverloaded.==}>}

:: <{StdOverloaded.<;}> = {!<{StdOverloaded.<}>}

:: <{StdOverloaded.isEven;}> = {!StdOverloaded.isEven}

:: <{StdOverloaded.isOdd;}> = {!StdOverloaded.isOdd}

:: <{StdOverloaded.length;}> = {!StdOverloaded.length}

:: <{StdOverloaded.%;}> = {!<{StdOverloaded.%}>}

:: <{StdOverloaded.+++;}> = {!<{StdOverloaded.+++}>}

:: <{StdOverloaded.^;}> = {!<{StdOverloaded.^}>}

:: <{StdOverloaded.abs;}> = {!StdOverloaded.abs}

:: <{StdOverloaded.sign;}> = {!StdOverloaded.sign}

:: <{StdOverloaded.~;}> = {!<{StdOverloaded.~}>}

:: <{StdOverloaded.mod;}> = {!StdOverloaded.mod}

:: <{StdOverloaded.rem;}> = {!StdOverloaded.rem}

:: <{StdOverloaded.gcd;}> = {!StdOverloaded.gcd}

:: <{StdOverloaded.lcm;}> = {!StdOverloaded.lcm}

:: <{StdOverloaded.toInt;}> = {!StdOverloaded.toInt}

:: <{StdOverloaded.toChar;}> = {!StdOverloaded.toChar}

:: <{StdOverloaded.toBool;}> = {!StdOverloaded.toBool}

:: <{StdOverloaded.toReal;}> = {!StdOverloaded.toReal}

:: <{StdOverloaded.toString;}> = {!StdOverloaded.toString}

:: <{StdOverloaded.fromInt;}> = {!StdOverloaded.fromInt}

:: <{StdOverloaded.fromChar;}> = {!StdOverloaded.fromChar}

:: <{StdOverloaded.fromBool;}> = {!StdOverloaded.fromBool}

:: <{StdOverloaded.fromReal;}> = {!StdOverloaded.fromReal}

:: <{StdOverloaded.fromString;}> = {!StdOverloaded.fromString}

:: <{StdOverloaded.ln;}> = {!StdOverloaded.ln}

:: <{StdOverloaded.log10;}> = {!StdOverloaded.log10}

:: <{StdOverloaded.exp;}> = {!StdOverloaded.exp}

:: <{StdOverloaded.sqrt;}> = {!StdOverloaded.sqrt}

:: <{StdOverloaded.sin;}> = {!StdOverloaded.sin}

:: <{StdOverloaded.cos;}> = {!StdOverloaded.cos}

:: <{StdOverloaded.tan;}> = {!StdOverloaded.tan}

:: <{StdOverloaded.asin;}> = {!StdOverloaded.asin}

:: <{StdOverloaded.acos;}> = {!StdOverloaded.acos}

:: <{StdOverloaded.atan;}> = {!StdOverloaded.atan}

:: <{StdOverloaded.sinh;}> = {!StdOverloaded.sinh}

:: <{StdOverloaded.cosh;}> = {!StdOverloaded.cosh}

:: <{StdOverloaded.tanh;}> = {!StdOverloaded.tanh}

:: <{StdOverloaded.asinh;}> = {!StdOverloaded.asinh}

:: <{StdOverloaded.acosh;}> = {!StdOverloaded.acosh}

:: <{StdOverloaded.atanh;}> = {!StdOverloaded.atanh}

:: <{StdOverloaded.inc;}> = {!StdOverloaded.inc}

:: <{StdOverloaded.dec;}> = {!StdOverloaded.dec}

